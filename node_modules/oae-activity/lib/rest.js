/*!
 * Copyright 2012 Sakai Foundation (SF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://www.osedu.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var OAE = require('oae-util/lib/oae');
var OaeUtil = require('oae-util/lib/util');

var ActivityAPI = require('oae-activity');


//////////////////////
// ACTIVITY STREAMS //
//////////////////////

/**
 * Request handler to get the activity stream of the given stream ID. It will fetch the activities and send out
 * the response.
 *
 * @param   {String}    activityStreamId    The ID of the activity stream to fetch
 * @param   {Request}   req                 The express request object
 * @param   {Response}  res                 The express response object
 * @api private
 */
var _handleGetActivities = function(activityStreamId, req, res) {
    req.telemetryUrl = '/api/activity/activityStreamId';
    var limit = OaeUtil.getNumberParam(req.query.limit);
    var start = req.query.start;
    ActivityAPI.getActivityStream(req.ctx, activityStreamId, start, limit, function(err, activityStream) {
        if (err) {
            return res.send(err.code, err.msg);
        }

        res.send(200, activityStream);
    });
};

/*!
 * Get the activity stream of the currently authenticated user
 */
OAE.tenantServer.get('/api/activity', function(req, res) {
    var userId = (req.ctx.user()) ? req.ctx.user().id : null;
    _handleGetActivities(userId, req, res);
});

/*!
 * Get the activity stream of the specified id
 */
OAE.tenantServer.get('/api/activity/:activityStreamId', function(req, res) {
    _handleGetActivities(req.params.activityStreamId, req, res);
});


//////////////////////////
// NOTIFICATION STREAMS //
//////////////////////////

/*!
 * Get the notification stream for the currently authenticated user
 */
OAE.tenantServer.get('/api/notifications', function(req, res) {
    req.telemetryUrl = '/api/notifications';
    ActivityAPI.getNotificationStream(req.ctx, req.query.start, req.query.limit, function(err, notificationStream) {
        if (err) {
            return res.send(err.code, err.msg);
        }

        res.send(200, notificationStream);
    });
});

/*!
 * Mark all notifications in the currently authenticated user's notification stream as read
 */
OAE.tenantServer.post('/api/notifications/markRead', function(req, res) {
    req.telemetryUrl = '/api/notifications/markRead';
    ActivityAPI.markNotificationsRead(req.ctx, function(err, lastReadTime) {
        if (err) {
            return res.send(err.code, err.msg);
        }

        res.send(200, JSON.stringify({'lastReadTime': lastReadTime}));
    });
});
