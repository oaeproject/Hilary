/*
 * Copyright 2012 Sakai Foundation (SF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://www.osedu.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var assert = require('assert');

var Context = require('oae-context').Context;

var LibraryAPI = require('oae-library');

describe('Library Authz', function() {

    var anonymousContext = null;

    beforeEach(function() {
        anonymousContext = new Context(global.oaeTests.tenants.cam);
    });

    describe('#canRemoveFromLibrary', function(callback) {

        /**
         * Test that verifies anonymous users cannot share a resource
         */
        it('verifies anonymous cannot remove a resource from a library', function(callback) {
            // The actual principalId doesn't matter, as it should know immediately that anonymous cannot share
            LibraryAPI.Authz.canRemoveFromLibrary(anonymousContext, 'some-prinicpal-id', function(err, canRemove) {
                assert.ok(!err);
                assert.ok(!canRemove);
                return callback();
            });
        });
    });
});
