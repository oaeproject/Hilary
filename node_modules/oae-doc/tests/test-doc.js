/*
 * Copyright 2012 Sakai Foundation (SF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://www.osedu.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * visibilitys and limitations under the License.
 */

var _ = require('underscore');
var assert = require('assert');

var DocAPI = require('oae-doc');
var TestAPI = require('oae-tests');

var request = TestAPI.Http.createRequest();

describe('Docs', function() {
    it('Test retrieving the list of available modules succeeds', function(callback) {
        request.get({
            'uri': 'http://localhost:2001/api/doc/modules'
        }, function(err, response, body) {
            body = JSON.parse(body);
            assert.ok(!err);
            assert.equal(response.statusCode, 200);
            assert.ok(body.length);
            assert.notEqual(_.indexOf(body, 'oae-doc'), -1);
            callback();
        });
    });

    it('Test retrieving documentation for a module succeeds', function(callback) {
        request.get({
            'uri': 'http://localhost:2001/api/doc/module/oae-doc'
        }, function(err, response, body) {
            body = JSON.parse(body);
            assert.ok(!err);
            assert.equal(response.statusCode, 200);
            assert.ok(_.keys(body).length);
            assert.ok(_.keys(body['api.js']).length);
            callback();
        });
    });

    // This test can not really be verified in here.
    // It can be verified by going into the test-coverage report and checking if the cache is returned.
    it('Test retrieving documentation from cache', function(callback) {
        request.get({
            'uri': 'http://localhost:2001/api/doc/module/oae-doc'
        }, function(err, response, body) {
            body = JSON.parse(body);
            assert.ok(!err);
            assert.equal(response.statusCode, 200);
            assert.ok(_.keys(body).length);
            assert.ok(_.keys(body['api.js']).length);
            callback();
        });
    });

    it('Test retrieving documentation for a module with a \'.\' in the moduleId fails', function(callback) {
        request.get({
            'uri': 'http://localhost:2001/api/doc/module/oae-d.oc'
        }, function(err, response, body) {
            assert.ok(!err);
            assert.equal(response.statusCode, 400);
            assert.equal(body, 'ModuleId can\'t contain \'.\'');
            callback();
        });
    });

    it('Test retrieving documentation for a module without an \'oae-\' prefix fails', function(callback) {
        request.get({
            'uri': 'http://localhost:2001/api/doc/module/doc'
        }, function(err, response, body) {
            assert.ok(!err);
            assert.equal(response.statusCode, 400);
            assert.equal(body, 'No such OAE module');
            callback();
        });
    });

    it('Test retrieving documentation for a module that doesn\'t exist fails', function(callback) {
        request.get({
            'uri': 'http://localhost:2001/api/doc/module/oae-doesntexist'
        }, function(err, response, body) {
            assert.ok(!err);
            assert.equal(response.statusCode, 404);
            assert.equal(body, 'No documentation for this module was found');
            callback();
        });
    });
});
