/*!
 * Copyright 2014 Apereo Foundation (AF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var assert = require('assert');

var ConfigTestUtil = require('oae-config/lib/test/util');

/**
 * Enable the Zencoder configuration for a particular tenant
 *
 * @param  {RestContext}    globalAdminRestContext  The rest context of a global admin who will enable Zencoder
 * @param  {String}         apiKey                  The API key id for the Zencoder requests
 * @param  {Function}       callback                Standard callback function
 * @throws {AssertionError}                         Thrown if an error occurs trying to configure the tenant
 */
var enableZencoder = module.exports.enableZencoder = function(globalAdminRestContext, apiKey, callback) {
    var update = {
        'oae-zencoder/zencoder/enabled': true,
        'oae-zencoder/zencoder/apiKey': apiKey,
        'oae-zencoder/zencoder/amazons3-bucket': 'zencoder-bucket',
        'oae-zencoder/zencoder/amazons3-region': 'eu-test-1',
        'oae-zencoder/zencoder/amazons3-access-key': 'supersecretaccesskey',
        'oae-zencoder/zencoder/amazons3-secret-key': 'supersecretsecretkey'
    };

    ConfigTestUtil.updateConfigAndWait(globalAdminRestContext, null, update, function(err) {
        assert.ok(!err);
        return callback();
    });
};

/**
 * Update Zencoder to use a custom API key for a particular tenant
 *
 * @param  {RestContext}    tenantAdminRestContext  The rest context of a tenant admin who will change Zencoder API key
 * @param  {String}         apiKey                  The API key id for the Zencoder requests
 * @param  {Function}       callback                Standard callback function
 * @throws {AssertionError}                         Thrown if an error occurs trying to configure the tenant
 */
var updateApiKey = module.exports.updateApiKey = function(tenantAdminRestContext, apiKey, callback) {
    var update = {
        'oae-zencoder/zencoder/enabled': true,
        'oae-zencoder/zencoder/apiKey': apiKey
    };

    ConfigTestUtil.updateConfigAndWait(tenantAdminRestContext, null, update, function(err) {
        assert.ok(!err);
        return callback();
    });
};
