/*
 * Copyright 2012 Sakai Foundation (SF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 * 
 *     http://www.osedu.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var Cassandra = require('oae-util/lib/cassandra');

/**
 * Ensure that the all of the content-related schemas are created. If they already exist, this method will not do anything
 * @param {Function(err)}    callback       Standard callback function
 * @param {Object}           callback.err   Error object, containing the error message
 */
module.exports.ensureSchema = function(callback) {
    callback = callback || function() {};
    Cassandra.createColumnFamilies({
        'Content': "create columnfamily Content (contentId text PRIMARY KEY, tenant text, visibility text, name text, description text, contentType text, lastModified text);",
        'ContentMembers': "create columnfamily ContentMembers (contentId text PRIMARY KEY);",
        'LibraryByPrincipal': "create columnfamily LibraryByPrincipal (principalId text PRIMARY KEY);",
    }, callback);
};

/**
 * Drop the content schema and all of its data.
 * @param {Function(err)}    callback       Standard callback function
 * @param {Object}           callback.err   Error object, containing the error message
 */
module.exports.dropSchema = function(callback) {
    callback = callback || function() {};
    Cassandra.dropColumnFamilies(['Content', 'ContentMembers', 'LibraryByPrincipal'], callback);
};