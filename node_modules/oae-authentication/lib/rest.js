/*!
 * Copyright 2013 Apereo Foundation (AF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */
var passport = require('passport');

var OAE = require('oae-util/lib/oae');

var AuthenticationAPI = require('oae-authentication');
var AuthenticationConstants = require('oae-authentication/lib/constants').AuthenticationConstants;
var AuthenticationUtil = require('oae-authentication/lib/util');

/////////////////////////////////////
// CUSTOM AUTHENTICATION PROVIDERS //
/////////////////////////////////////

require('./strategies/cas/rest');
require('./strategies/facebook/rest');
require('./strategies/google/rest');
require('./strategies/ldap/rest');
require('./strategies/local/rest');
require('./strategies/shibboleth/rest');
require('./strategies/signed/rest');
require('./strategies/twitter/rest');


/////////////////////////
// PASSWORD MANAGEMENT //
/////////////////////////

/*!
 * Change the password of the currently authenticated user in the global tenant
 */
OAE.globalAdminServer.post('/api/user/:id/password', function(req, res) {
    req.telemetryUrl = '/api/user/id/password';
    AuthenticationAPI.changePassword(req.ctx, req.params.id, req.body.oldPassword, req.body.newPassword, function(err, changed) {
        if (err) {
            return res.send(err.code, err.msg);
        }

        res.send(200);
    });
});

/*!
 * Change the password of the currently authenticated user in the user tenant
 */
OAE.tenantServer.post('/api/user/:id/password', function(req, res) {
    req.telemetryUrl = '/api/user/id/password';
    AuthenticationAPI.changePassword(req.ctx, req.params.id, req.body.oldPassword, req.body.newPassword, function(err, changed) {
        if (err) {
            return res.send(err.code, err.msg);
        }

        res.send(200);
    });
});

/*!
 * Checks whether or not a user id exists
 */
OAE.tenantServer.get('/api/auth/exists/:username', function(req, res) {
    req.telemetryUrl = '/api/auth/exists/username';
    AuthenticationAPI.loginIdExists(req.ctx, req.params.username, function(err, exists) {
        if (err) {
            return res.send(err.code, err.msg);
        }

        // If the login id doesn't exist yet, we send back a 404
        if (exists) {
            res.send(200);
        } else {
            res.send(404);
        }
    });
});
