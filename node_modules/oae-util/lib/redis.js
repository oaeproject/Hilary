/*
 * Copyright 2012 Sakai Foundation (SF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://www.osedu.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var redis = require('redis');
var log = require('oae-logger').logger('redis');

/**
 * Sets up a redis connection.
 *
 * @param  {Object}         config      The redis configuration object
 * @return {RedisClient}                A redis client that is connected to one of redis db indexes.
 */
module.exports.createClient = function(config) {
    // Open a socket.
    var client = redis.createClient(config.port, config.host);

    // Authenticate (if required, redis allows for async auth)
    if (config.pass && config.pass !== '') {
        client.auth(config.pass, function(err, res) {
            if (err) {
                log().error({err: err}, 'Couldn\'t authenticate with redis.');
            }
        });
    }

    // Select the correct DB index.
    var dbIndex = config.dbIndex || 0;
    client.select(dbIndex, function(err, res) {
        if (err) {
            log().error({err: err}, 'Couldn\'t select the redis DB index \'%s\'', dbIndex);
        }
    });

    // Register an error handler.
    var redisErrorHandler = function(err) {
        log().error({err: err}, 'Got an error when dealing with redis.');
    };
    client.on("error", redisErrorHandler);

    // Done.
    return client;
};
