var Cassandra = require('oae-util/lib/cassandra');

var api = require('./api');

/**
 * Ensure that the tenant schema is created. If the tenant schema has not been created, or the default tenant has not been seeded,
 * both will be performed automatically. If both the schema and the default tenant exist, then this method will do nothing.
 * 
 * @param {Function} callback A function(err), specifying whether or not there was an error creating the schema.
 */
module.exports.ensureSchema = function(callback) {
    // Bootstrap the Tenant CF, if necessary
    Cassandra.runQuery('create columnfamily Tenant (port text primary key, alias text, name text, description text)', false, function(err) {

        if (!err) {
            console.info('Automatically created the "Tenant" column family.');
        }

        if (err && err.why && err.why.indexOf('existing column family') > -1) {
            err = false;
        }

        callback(err);
    });
};

/**
 * Drop the tenant schema and all of its data.
 *
 * @param {Function} callback A function(err), specifying whether or not there was an error dropping the schema
 */
module.exports.dropSchema = function(callback) {
    Cassandra.runQuery('drop columnfamily Tenant', false, function(err) {
        if (err && err.why && err.why.indexOf('non existing column family') > -1) {
            err = false;
        }
        callback(err);
    });
}