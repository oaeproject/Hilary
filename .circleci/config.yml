version: 2
jobs:
  test-with-dockers:
    machine: true
    working_directory: ~/Hilary
    steps:
      - checkout
      # checkout submodules
      - run: git submodule update --init --recursive
      # checkout master branch of all submodules (default is detached)
      - run: git submodule foreach -q --recursive 'branch="$(git config -f $toplevel/.gitmodules submodule.$name.branch)"; [ -z "$branch" ] && git checkout master || git checkout $branch'
      # change docker-compose absolute paths for volume mounting
      - run: sed -i -e 's/- \/src\/Hilary/- \/home\/circleci\/Hilary/g' docker-compose.yml
      - run: sed -i -e 's/- \/src\/files/- \/home\/circleci\/files/g' docker-compose.yml
      - run: sed -i -e 's/\/src\/tmp/\/home\/circleci\/tmp/g' docker-compose.yml
      # change some configuration
      - run: printf "\n\nconfig.ui.path = './3akai-ux';" >> config.js
      - run: printf "\n\nconfig.cassandra.hosts = ['oae-cassandra'];" >> config.js
      - run: printf "\n\nconfig.redis.host = 'oae-redis';" >> config.js
      - run: printf "\n\nconfig.search.hosts[0].host = 'oae-elasticsearch';" >> config.js
      - run: printf "\n\nconfig.mq.connection.host = 'oae-rabbitmq';" >> config.js
      - run: printf "\n\nconfig.etherpad.hosts[0].host = 'oae-etherpad';" >> config.js
      - run: printf "\n\nconfig.previews.enabled = true;" >> config.js
      - run: printf "\n\nconfig.email.debug = false;" >> config.js
      - run: printf "\n\nconfig.email.transport = 'sendmail';" >> config.js
      # build the hilary:latest image
      - run: docker-compose build
      # install dependencies for 3akai-ux
      - run: docker-compose run oae-hilary 'npm install --prefix ./3akai-ux'
      # install dependencies for Hilary
      - run: docker-compose run oae-hilary 'npm install'
      # run tests for all modules
      - run: docker-compose run oae-hilary 'grunt test'
  test-with-node:
    environment:
      - NODE_VERSION: 6.11.5
    machine: true
    working_directory: ~/Hilary
    steps:
      - checkout
      # checkout submodules
      - run: git submodule update --init --recursive
      # checkout master branch of all submodules (default is detached)
      - run: git submodule foreach -q --recursive 'branch="$(git config -f $toplevel/.gitmodules submodule.$name.branch)"; [ -z "$branch" ] && git checkout master || git checkout $branch'
      # change docker-compose absolute paths for volume mounting
      - run: sed -i -e 's/- \/src\/Hilary/- \/home\/circleci\/Hilary/g' docker-compose.yml
      - run: sed -i -e 's/- \/src\/files/- \/home\/circleci\/files/g' docker-compose.yml
      - run: sed -i -e 's/\/src\/tmp/\/home\/circleci\/tmp/g' docker-compose.yml
      - run: mkdir -p ../files
      - run: mkdir -p ../tmp
      # change some configuration
      - run: printf "\n\nconfig.ui.path = './3akai-ux';" >> config.js
      - run: printf "\n\nconfig.cassandra.hosts = ['localhost'];" >> config.js
      - run: printf "\n\nconfig.redis.host = 'localhost';" >> config.js
      - run: printf "\n\nconfig.search.hosts[0].host = 'localhost';" >> config.js
      - run: printf "\n\nconfig.mq.connection.host = 'localhost';" >> config.js
      - run: printf "\n\nconfig.etherpad.hosts[0].host = 'localhost';" >> config.js
      - run: printf "\n\nconfig.previews.enabled = true;" >> config.js
      - run: printf "\n\nconfig.email.debug = false;" >> config.js
      - run: printf "\n\nconfig.email.transport = 'sendmail';" >> config.js
      - run: printf "\n\nconfig.servers.serverInternalAddress = '0.0.0.0';" >> config.js
      - run: mkdir -p /home/circleci/Hilary/tmp
      - run: printf "\n\ntmpDir = '/home/circleci/Hilary/tmp';" >> config.js

      # dependencies
      - run: sudo apt-get update && sudo apt-get install -y --no-install-recommends autoconf automake bzip2 ca-certificates curl file g++ gcc ghostscript git graphicsmagick libbz2-dev libc6-dev libcurl4-openssl-dev libevent-dev libffi-dev libgeoip-dev libglib2.0-dev libjpeg-dev liblzma-dev libmagickcore-dev libmagickwand-dev libmysqlclient-dev libncurses-dev libpng-dev libpq-dev libreadline-dev libsqlite3-dev libssl-dev libtool libwebp-dev libxml2-dev libxslt-dev libyaml-dev make openssh-client patch wget xz-utils zlib1g-dev
      - run: sudo apt-get install -y --no-install-recommends libreoffice libreoffice-writer ure libreoffice-java-common libreoffice-core libreoffice-common # openjdk-7-jre
      - run: sudo apt-get install -y poppler-data autotools-dev libjpeg-dev libtiff4-dev libpng12-dev libgif-dev libxt-dev autoconf automake libtool bzip2 libxml2-dev libuninameslist-dev libspiro-dev python-dev libpango1.0-dev libcairo2-dev chrpath uuid-dev uthash-dev libopenjpeg-dev
      - run: sudo add-apt-repository ppa:coolwanglu/pdf2htmlex && sudo apt-get update && sudo apt-get install pdf2htmlEX
      - run: wget http://poppler.freedesktop.org/poppler-0.26.5.tar.xz && tar xf poppler-0.26.5.tar.xz && cd poppler-0.26.5 && ./configure --prefix=/usr --enable-xpdf-headers && make && sudo make install
      - run: sudo apt-get -y -q remove libreoffice-gnome
      - run: sudo adduser --home=/opt/libreoffice --disabled-password --gecos "" --shell=/bin/bash libreoffice

      # node and npm install
      - run: npm install -g npm@4.6.1 # default npm version is 5 and it doesn't work
      - run: node -v
      - run: npm -v

      # build the hilary:latest image and run all dockers
      - run: docker-compose up --build -d
      - run: npm install
      # the reason we do this here is because we need cassandra to boot up before we relaunch etherpad
      - run: docker-compose stop oae-hilary # we won't be needing this anyway
      - run: docker-compose restart oae-etherpad # etherpad has exited by now because cassandra isn't ready yet

      # run tests for all modules
      - run: grunt test

workflows:
  version: 2
  test-all:
    jobs:
      - test-with-node
      - test-with-dockers
