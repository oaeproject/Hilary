/*!
 * Copyright 2013 Apereo Foundation (AF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

/**
 * An object that represents a means to log in to the system.
 *
 * @param  {String}    tenantAlias     The tenant for which the login id is valid
 * @param  {String}    provider        The authentication provider service that provides this authentication
 * @param  {String}    externalId      The external user id representation in the external system
 * @param  {Object}    [properties]    A hash containing additional properties associated to the login id. E.g., a password.
 */
var LoginId = module.exports.LoginId = function(tenantAlias, provider, externalId, properties) {
    var that = {};
    that.tenantAlias = tenantAlias;
    that.provider = provider;
    that.externalId = externalId;
    that.properties = properties;
    return that;
};

/**
 * An object that represents a token that can be used to log into a tenant.
 *
 * @param  {Number}     expires     Timestamp (in ms since epoch) when the signature expires.
 * @param  {String}     host        The tenant host for which the signature is valid
 * @param  {String}     signature   A signature that's valid for this host, userId and tenant.
 * @param  {String}     userId      The userId that needs to be passed to the tenant endpoint; this is the user that will be logged in.
 */
var Token = module.exports.Token = function(expires, host, signature, userId) {
    var that = {};
    that.expires = expires;
    that.host = host;
    that.signature = signature;
    that.userId = userId;
    return that;
};
