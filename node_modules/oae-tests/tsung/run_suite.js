/*
 * Copyright 2012 Sakai Foundation (SF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 * 
 *     http://www.osedu.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var argv = require('optimist')
    .usage('Usage: $0 -s <suite to run>')
    
    .demand('s')
    .alias('s', 'suite')
    .describe('s', 'The suite to run')
    .argv;
var fs = require('fs');

var tsung = require('node-tsung');

var config = {
    'loglevel': 'notice',
    'version': '1.0',
    'dumpTraffic': false
};

// A simple runner that tests a server running on localhost:2001
var runner = new tsung.Tsung(config);

// Run the client locally
runner.addClient('localhost', true, 10000);

// against a local server.
runner.addServer('localhost', 2001);

// 4 phases of each 1 minute who exponentiall introduce new users.
runner.addPhase(20, 'second', 8, 'second');
//runner.addPhase(1, 'minute', 64, 'second');
//runner.addPhase(1, 'minute', 128, 'second');
//runner.addPhase(1, 'minute', 256, 'second');

// The ./data directory will hold the csv and format files.
runner.addDataDirectory(__dirname + '/data/csv');

// Add a suite
var suite = fs.readFileSync(__dirname + '/suites/' + argv.suite, 'utf-8');
var tests = suite.split('\n');
var sessions = [];
var totalWeight = 0;
for (var i = 0; i < tests.length; i++) {
    var testCase = tests[i].split(',');
    var session = {
        'name': testCase[0],
        'weight': parseInt(testCase[1], 10),
        'test': require(__dirname + '/tests/' + testCase[0]).test
    };
    sessions.push(session);
    totalWeight += session.weight;
}
for (var i = 0; i < sessions.length; i++) {
    session.test(runner, session.weight * 100 / totalWeight);
}

// Dump or run the test
runner.to_xml(function(xml) {
    xml = xml.replace(/%/g, '%%');
    console.log(xml);
});
