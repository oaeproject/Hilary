/*
 * Copyright 2012 Sakai Foundation (SF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://www.osedu.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var assert = require('assert');

var Signature = require('oae-util/lib/signature');
var Validator = require('oae-util/lib/validator').Validator;

describe('Signature', function() {
    describe('Validator', function() {

        var validate = function(body, signature, isValid) {
            var validator = new Validator();
            validator.check(signature, "Invalid signature").verifySignature(body);
            assert.equal(validator.hasErrors(), !isValid);
        };

        var validateExpiring = function(body, signature, expires, isValid) {
            var validator = new Validator();
            validator.check(signature, "Invalid signature").verifyExperingSignature(body, expires);
            assert.equal(validator.hasErrors(), !isValid);
        };

        it('#verifySignature()', function() {
            var body = "The quick brown fox jumped over the lazy dog.";
            var signature = Signature.sign(body);

            validate(body, signature, true);
            validate('totally different', signature, false);
            validate(body + 'a', signature, false);
        });

        it('#verifyExpiringSignature()', function(callback) {
            var body = "The quick brown fox jumped over the lazy dog.";
            // expire after 2 ms
            var expires = (1/60)/500;
            var signature = Signature.createExpiringSignature(body, expires);

            validateExpiring(body, signature.signature, signature.expires, true);
            validateExpiring('totally different', signature.signature, signature.expires, false);
            validateExpiring(body + 'a', signature.signature, signature.expires, false);

            // Test expiration.
            setTimeout(function() {
                // The signature is now invalid as 20 ms have past.
                validateExpiring(body, signature.signature, signature.expires, false);
                callback();
            }, 20);
        });


    });
});
