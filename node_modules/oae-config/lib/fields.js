/*!
 * Copyright 2013 Apereo Foundation (AF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

/**
 * Returns the configuration object for a boolean type field
 *
 * @param  {String}     name                       The name of the element shown in the UI as a header
 * @param  {String}     description                The description that will be shown next to the element
 * @param  {Boolean}    defaultValue               The default value of the element
 * @param  {Object}     [options]                  List of additional configuration options
 * @param  {Boolean}    [options.tenantOverride]   Whether or not tenants can override this setting or not. If this is not explicitly set, tenantOverride will be set to true
 * @param  {Boolean}    [options.suppress]         Whether or not non-admin users will see the configuration value in the config feed. If this is not explicitly set, suppress will be set to false
 * @param  {Boolean}    [options.globalAdminOnly]  Whether or not a configuration value can only be retrieved by a global administrator. If this is not explicitly set, globalAdminOnly will be set to false
 */
var Bool = module.exports.Bool = function(name, description, defaultValue, options) {
    options = options || {};
    return {
        'description': description,
        'defaultValue': defaultValue,
        'name': name,
        'tenantOverride': options.tenantOverride === false ? false : true,
        'suppress': options.suppress === true ? true : false,
        'globalAdminOnly': options.globalAdminOnly === true ? true : false,
        'type': 'boolean'
    };
};

/**
 * Returns the configuration object for a text input type field
 *
 * @param  {String}     name                       The name of the element shown in the UI as a header
 * @param  {String}     description                The description that will be shown next to the element
 * @param  {String}     defaultValue               The default value of the element
 * @param  {Object}     [options]                  List of additional configuration options
 * @param  {Boolean}    [options.tenantOverride]   Whether or not tenants can override this setting or not. If this is not explicitly set, tenantOverride will be set to true
 * @param  {Boolean}    [options.suppress]         Whether or not non-admin users will see the configuration value in the config feed. If this is not explicitly set, suppress will be set to false
 * @param  {Boolean}    [options.globalAdminOnly]  Whether or not a configuration value can only be retrieved by a global administrator. If this is not explicitly set, globalAdminOnly will be set to false
 */
var Text = module.exports.Text = function(name, description, defaultValue, options) {
    options = options || {};
    return {
        'description': description,
        'defaultValue': defaultValue,
        'name': name,
        'tenantOverride': options.tenantOverride === false ? false : true,
        'suppress': options.suppress === true ? true : false,
        'globalAdminOnly': options.globalAdminOnly === true ? true : false,
        'type': 'text'
    };
};

/**
 * Returns the configuration object for a radio button group type field
 *
 * @param  {String}     name                       The name of the element shown in the UI as a header
 * @param  {String}     description                The description that will be shown next to the element
 * @param  {String}     defaultValue               The default value of the element
 * @param  {Array}      group                      An array of options for the radio button group. e.g. {'name': 'choice 1', 'value': 'ch1'}
 * @param  {Object}     [options]                  List of additional configuration options
 * @param  {Boolean}    [options.tenantOverride]   Whether or not tenants can override this setting or not. If this is not explicitly set, tenantOverride will be set to true
 * @param  {Boolean}    [options.suppress]         Whether or not non-admin users will see the configuration value in the config feed. If this is not explicitly set, suppress will be set to false
 * @param  {Boolean}    [options.globalAdminOnly]  Whether or not a configuration value can only be retrieved by a global administrator. If this is not explicitly set, globalAdminOnly will be set to false
 */
var Radio = module.exports.Radio = function(name, description, defaultValue, group, options) {
    options = options || {};
    return {
        'description': description,
        'defaultValue': defaultValue,
        'group': group,
        'name': name,
        'tenantOverride': options.tenantOverride === false ? false : true,
        'suppress': options.suppress === true ? true : false,
        'globalAdminOnly': options.globalAdminOnly === true ? true : false,
        'type': 'radio'
    };
};

/**
 * Returns the configuration object for a drop down list type field
 *
 * @param  {String}     name                       The name of the element shown in the UI as a header
 * @param  {String}     description                The description that will be shown next to the element
 * @param  {String}     defaultValue               The default value of the element
 * @param  {Array}      list                       An array of options for the dorp down list. e.g. {'name': 'choice 1', 'value': 'ch1'}
 * @param  {Object}     [options]                  List of additional configuration options
 * @param  {Boolean}    [options.tenantOverride]   Whether or not tenants can override this setting or not. If this is not explicitly set, tenantOverride will be set to true
 * @param  {Boolean}    [options.suppress]         Whether or not non-admin users will see the configuration value in the config feed. If this is not explicitly set, suppress will be set to false
 * @param  {Boolean}    [options.globalAdminOnly]  Whether or not a configuration value can only be retrieved by a global administrator. If this is not explicitly set, globalAdminOnly will be set to false
 */
var List = module.exports.List = function(name, description, defaultValue, list, options) {
    options = options || {};
    return {
        'description': description,
        'defaultValue': defaultValue,
        'list': list,
        'name': name,
        'tenantOverride': options.tenantOverride === false ? false : true,
        'suppress': options.suppress === true ? true : false,
        'globalAdminOnly': options.globalAdminOnly === true ? true : false,
        'type': 'list'
    };
};
