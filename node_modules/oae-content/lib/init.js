/*!
 * Copyright 2012 Sakai Foundation (SF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 * 
 *     http://www.osedu.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var Cassandra = require('oae-util/lib/cassandra');

module.exports = function(config, callback) {
    // Initialize search capabilities
    require('./search');
    
    ensureSchema(callback);
};

/**
 * Ensure that the all of the content-related schemas are created. If they already exist, this method will not do anything
 * 
 * @param  {Function}         callback       Standard callback function
 * @param  {Object}           callback.err   Error object, containing the error message
 * @api private
 */
var ensureSchema = function(callback) {
    Cassandra.createColumnFamilies({
        'Content': 'CREATE COLUMNFAMILY Content (contentId text PRIMARY KEY, tenant text, visibility text, name text, description text, contentType text, createdBy text, created text, lastModified text);',
        'LibraryByPrincipal': 'CREATE COLUMNFAMILY LibraryByPrincipal (principalId text PRIMARY KEY);',
        'Revisions': 'CREATE COLUMNFAMILY Revisions (revisionId text PRIMARY KEY);',
        'RevisionByContent': 'CREATE COLUMNFAMILY RevisionByContent (contentId text PRIMARY KEY);',
        'Comments': 'CREATE COLUMNFAMILY Comments (commentId text PRIMARY KEY, contentId text, created text, createdBy text, body text, level int, replyTo text, deleted boolean);',
        'CommentsByContent': 'CREATE COLUMNFAMILY CommentsByContent (contentId text PRIMARY KEY, commentId text);'
    }, callback);
};
