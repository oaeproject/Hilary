/*!
 * Copyright 2013 Apereo Foundation (AF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var _ = require('underscore');

var ActivityConstants = require('oae-activity/lib/constants').ActivityConstants;

////////////////
// SEED MODEL //
////////////////

/**
 * An Activity seed resource that can be used to locate a resource in the system that is associated to an activity. Intended
 * to be the most light-weight representation possible that provides enough data to gather more information from the system and
 * build an Activity Entity.
 *
 * @param  {String}    resourceType    The type of resource (user, comment, userProfile, etc...)
 * @param  {String}    resourceId      The ID of the resource
 * @param  {Object}    [resourceData]  A resourceType-specific blob of JSON data that provides more information needed to construct the Activity Object. For example, for a comment you may include the parent content object that you had at the time the comment was posted.
 */
var ActivitySeedResource = module.exports.ActivitySeedResource = function(resourceType, resourceId, resourceData) {
    var that = {};
    that.resourceType = resourceType;
    that.resourceId = resourceId;
    that.resourceData = resourceData;
    return that;
};

/**
 * An Activity Seed object that can be used to produce all entities (actor, object, target) that were involved in an activity and
 * finally construct an Activity.
 *
 * @param  {String}                activityType        The type of activity that occurred. e.g., comment-post, content-update, etc...
 * @param  {Number}                published           The number of milliseconds since the epoch that this activity occurred
 * @param  {String}                verb                The action that was performed, as per the activity verb in the ActivityStrea.ms specification. See `ActivityConstants.verbs` for suppored verbs.
 * @param  {ActivitySeedResource}  actorResource       The Actor (i.e., user) that performed the activity
 * @param  {ActivitySeedResource}  [objectResource]    The Object on which the activity was performed
 * @param  {ActivitySeedResource}  [targetResource]    The Target resource of the activity, as recommended in the ActivityStrea.ms specification
 */
var ActivitySeed = module.exports.ActivitySeed = function(activityType, published, verb, actorResource, objectResource, targetResource) {
    var that = {};
    that.activityType = activityType;
    that.published = published;
    that.verb = verb;
    that.actorResource = actorResource;
    that.objectResource = objectResource;
    that.targetResource = targetResource;
    return that;
};


////////////////////
// ACTIVITY MODEL //
////////////////////

/*!
 * The following is the OAE activity model which is 99% based on the activitystrea.ms JSON model specification:
 * http://activitystrea.ms/specs/json/1.0
 *
 * In additional the ActivityStrea.ms model, OAE makes some guarantees about what information will be available, including custom
 * activity attributes, which will be reflected and documented in this model specification.
 */

/**
 * An Activity media link model, based on the media link model: http://activitystrea.ms/specs/json/1.0/#media-link
 *
 * Represents a media item that can be used to represent an Object.
 *
 * @param  {String}    url         The url to the media item
 * @param  {Number}    [width]     The recommended width of the media item
 * @param  {Number}    [height]    The recommended height of the media item
 * @param  {Number}    [duration]  The length in seconds of the media item if it is time-based, such as audio or video
 */
var ActivityMediaLink = module.exports.ActivityMediaLink = function(url, width, height, duration) {
    var that = {};
    that.url = url;
    that.width = width;
    that.height = height;
    that.duration = duration;
    return that;
};

/**
 * An activity that occurred.
 *
 * @param  {String}            oaeActivityType     The type of activity that occurred
 * @param  {String}            oaeActivityId       The unique ID of the activity
 * @param  {String}            verb                The action that was performend
 * @param  {Number}            published           The datetime that the activity occurred, in millis since the epoch
 * @param  {ActivityEntity}    actor               The actor Object that performed the action
 * @param  {ActivityEntity}    [object]            The object Object on which the action was performed
 * @param  {ActivityEntity}    [target]            The target Object of the activity, as described in the ActivityStrea.ms specification
 */
var Activity = module.exports.Activity = function(oaeActivityType, oaeActivityId, verb, published, actor, object, target) {
    var that = {};
    that[ActivityConstants.properties.OAE_ACTIVITY_TYPE] = oaeActivityType;
    that[ActivityConstants.properties.OAE_ACTIVITY_ID] = oaeActivityId;
    that.verb = verb;
    that.published = published;
    that.actor = actor;
    that.object = object;
    that.target = target;
    return that;
};

/**
 * A very generic activity Entity model, based on the ActivityStrea.ms "Object" model specification. The local terminology of the ActivityStrea.ms
 * "Object" model is the "Entity" model. Entity is being used in place so as to not cause confusion with the "object" entity type, which
 * represents the entity on which an activity was performed.
 *
 * @param  {String}    objectType          The type of object / resourceType (e.g., user, content, etc...)
 * @param  {String}    id                  The ID of the object
 * @param  {Object}    [opts]              Optional properties of the Object
 * @param  {String}    [opts.url]          The URL of the object
 * @param  {String}    [opts.displayName]  The display name of the object
 * @param  {MediaLink} [opts.image]        A media item that represents the object
 * @param  {String}    [opts.summary]      A rich-text (e.g., HTML) summary of the object
 * @param  {Number}    [opts.published]    Time in millis since the epoch when the object was published
 * @param  {Number}    [opts.created]      Time in millis since the epoch when the object was created
 * @param  {Object}    [opts.ext]          A hash of custom extension properties that will be overlayed onto the Object model
 */
var ActivityEntity = module.exports.ActivityEntity = function(objectType, id, opts) {
    opts = opts || {};
    var ext = opts.ext || {};
    delete opts.ext;
    return _.extend({}, ext, opts, {'objectType': objectType, 'id': id});
};

/**
 * A stream of activities, as per the ActivityStrea.ms specification.
 *
 * @param  {Activity[]}    activities  An array of activities to return.
 */
var ActivityStream = module.exports.ActivityStream = function(activities) {
    return {'items': activities};
};
