/*!
 * Copyright 2012 Sakai Foundation (SF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://www.osedu.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var RestAPI = require('oae-rest');

var REFRESH_DELAY = 250;

/**
 * Search for all the documents that match the query. This bypasses paging, meaning all the results will be
 * returned, regardless of the limit set in the `opts`. This is useful for tests where the data-set grows
 * indeterministically with more tests. This test always includes a delay and refresh, as described by
 * @see #searchRefreshed
 *
 * If `opts._refresh` is specified and is set to `false`, then this will not refresh.
 *
 * @see RestAPI.Search#search for the meaning of the method parameters.
 */
var searchAll = module.exports.searchAll = function(restCtx, searchType, params, opts, callback) {
    opts = opts || {};

    // If the caller has specified not to refresh, then call RestAPI.Search.search directly to dodge a refresh delay. Useful to speed
    // up test times if you are calling searchAll many times in succession to verify different things without updating the search index
    // in between.
    var doSearch = (opts._refresh === false) ? RestAPI.Search.search : searchRefreshed;

    // Ditch the refresh parameter after we've used it.
    delete opts._refresh;

    // Search first with a limit of 1. This is to get the total number of documents available to search.
    opts.limit = 1;
    doSearch(restCtx, searchType, params, opts, function(err, result) {
        if (err) {
            return callback(err);
        } else if (result.total === 0) {
            // We got 0 documents, just return the result as-is
            return callback(null, result);
        }

        // There are more results, search for everything. Don't refresh this time since we already did for the previous query (if specified)
        opts.limit = result.total;
        RestAPI.Search.search(restCtx, searchType, params, opts, callback);
    });
};

/**
 * Perform a search with the given parameters, but first perform a delay and then a `SearchAPI.Search.refresh`. This is
 * useful for tests, where we need to allow time for an indexing event to take place before performing a validation.
 *
 * @see RestAPI.Search#search for the meaning of the method parameters.
 */
var searchRefreshed = module.exports.searchRefreshed = function(restCtx, searchType, params, opts, callback) {
    setTimeout(RestAPI.Search.refresh, REFRESH_DELAY, restCtx, function(err) {
        if (err) {
            return callback(err);
        }

        RestAPI.Search.search(restCtx, searchType, params, opts, callback);
    });
};