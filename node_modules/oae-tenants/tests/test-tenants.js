/*
 * Copyright 2012 Sakai Foundation (SF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 * 
 *     http://www.osedu.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var assert = require('assert');

var Cassandra = require('oae-util/lib/cassandra');

var TenantsAPI = require('oae-tenants/lib/api');


describe('Tenants', function() {

    /**
     * Test that it is possible to access a tenant by their mapped port
     */
    it('Test get tenant by port', function(callback) {
        TenantsAPI.getTenantByPort(2001, function(err, tenant) {
            assert.ok(!err);
            assert.equal(2001, tenant.port);
            assert.equal('camtest', tenant.alias);
            assert.equal('Cambridge University Test', tenant.name);
            assert.equal('Cambridge University Description', tenant.description);
            assert.equal('oae.cam.ac.uk', tenant.baseUrl);
            TenantsAPI.getTenantByPort(2002, function(err, tenant) {
                assert.ok(!err);
                assert.equal(2002, tenant.port);
                assert.equal('gttest', tenant.alias);
                assert.equal('Georgia Tech Test', tenant.name);
                assert.equal('Georgia Tech Description', tenant.description);
                assert.equal('oae.gatech.edu', tenant.baseUrl);
                callback();
            });
        });

    });

    /**
     * Test that it is possible to access a tenant by their mapped alias
     */
    it('Test get tenant by alias', function(callback) {
        TenantsAPI.getTenantByAlias('camtest', function(err, tenant) {
            assert.ok(!err);
            assert.equal(2001, tenant.port);
            assert.equal('camtest', tenant.alias);
            assert.equal('Cambridge University Test', tenant.name);
            assert.equal('Cambridge University Description', tenant.description);
            assert.equal('oae.cam.ac.uk', tenant.baseUrl);
            TenantsAPI.getTenantByAlias('gttest', function(err, tenant) {
                assert.ok(!err);
                assert.equal(2002, tenant.port);
                assert.equal('gttest', tenant.alias);
                assert.equal('Georgia Tech Test', tenant.name);
                assert.equal('Georgia Tech Description', tenant.description);
                assert.equal('oae.gatech.edu', tenant.baseUrl);
                callback();
            });
        });
    });

    /**
     * Test that it is possible to create a tenant
     */
    it('Test create content', function(callback) {
        TenantsAPI.createTenant('rsmarttest', 'rSmart Test', 'rSmart Description', 2003, "oae.rsmart.com", function(err, tenant) {
            assert.ok(!err);
            assert.equal('rsmarttest', tenant.alias);
            assert.equal('rSmart Test', tenant.name);
            assert.equal('rSmart Description', tenant.description);
            assert.equal('oae.rsmart.com', tenant.baseUrl);
            assert.equal(2003, tenant.port);
            TenantsAPI.getTenantByPort(2003, function(err, tenant) {
                assert.ok(tenant);
                assert.equal('rsmarttest', tenant.alias);
                assert.equal('rSmart Test', tenant.name);
                assert.equal('rSmart Description', tenant.description);
                assert.equal('oae.rsmart.com', tenant.baseUrl);
                assert.equal(2003, tenant.port);
                callback();
            });
        });
    });

    /**
     * Test that a tenant cannot be created with a duplicate port
     */
    it('Test duplicate port', function(callback) {
        TenantsAPI.createTenant('testCannotCreateDuplicatePort', 'Test Tenant', 'A tenant for testing', 2001, "duplicate.com", function(err, tenant) {
            assert.ok(err);
            TenantsAPI.getTenantByPort(2001, function(err, tenant) {
                assert.ok(!err);
                assert.equal(2001, tenant.port);
                assert.equal('camtest', tenant.alias);
                assert.equal('Cambridge University Test', tenant.name);
                assert.equal('Cambridge University Description', tenant.description);
                assert.equal('oae.cam.ac.uk', tenant.baseUrl);
                callback();
            });
        });
    });

    /**
     * Test that a tenant cannot be created with a duplicate alias
     */
    it('Test duplicate alias', function(callback) {
        TenantsAPI.createTenant('camtest', 'Test Tenant', 'A tenant for testing', 2004, "duplicate.com", function(err, tenant) {
            assert.ok(err);
            TenantsAPI.getTenantByPort(2004, function(err, tenant) {
                assert.ok(err);
                TenantsAPI.getTenantByAlias('camtest', function(err, tenant) {
                    assert.ok(!err);
                    assert.equal(2001, tenant.port);
                    assert.equal('camtest', tenant.alias);
                    assert.equal('Cambridge University Test', tenant.name);
                    assert.equal('Cambridge University Description', tenant.description);
                    assert.equal('oae.cam.ac.uk', tenant.baseUrl);
                    callback();
                });
            });
        });
    });

});