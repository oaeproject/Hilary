/*!
 * Copyright 2013 Apereo Foundation (AF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var OAE = require('oae-util/lib/oae');
var OaeUtil = require('oae-util/lib/util');

var FollowingAPI = require('oae-following');

/*!
 * Get all the followers of the user identified by the given `userId`
 */
OAE.tenantServer.get('/api/following/:userId/followers', function(req, res) {
    req.telemetryUrl = '/api/following/userId/followers';

    var limit = OaeUtil.getNumberParam(req.query.limit, 10, 1, 25);
    FollowingAPI.getFollowers(req.ctx, req.params.userId, req.query.start, limit, function(err, followers, nextToken) {
        if (err) {
            return res.send(err.code, err.msg);
        }

        return res.send(200, {'results': followers, 'nextToken': nextToken});
    });
});

/*!
 * Get all the users that the user identified by the given `userId` follows
 */
OAE.tenantServer.get('/api/following/:userId/following', function(req, res) {
    req.telemetryUrl = '/api/following/userId/following';

    var limit = OaeUtil.getNumberParam(req.query.limit, 10, 1, 25);
    FollowingAPI.getFollowing(req.ctx, req.params.userId, req.query.start, limit, function(err, following, nextToken) {
        if (err) {
            return res.send(err.code, err.msg);
        }

        return res.send(200, {'results': following, 'nextToken': nextToken});
    });
});

/*!
 * Make the currently authenticated user start following the user identified by the given `userId`
 */
OAE.tenantServer.post('/api/following/:userId/follow', function(req, res) {
    req.telemetryUrl = '/api/following/userId/follow';

    FollowingAPI.follow(req.ctx, req.params.userId, function(err, followers) {
        if (err) {
            return res.send(err.code, err.msg);
        }

        return res.send(200);
    });
});

/*!
 * Make the currently authenticated user stop following the user identified by the given `userId`
 */
OAE.tenantServer.post('/api/following/:userId/unfollow', function(req, res) {
    req.telemetryUrl = '/api/following/userId/unfollow';

    FollowingAPI.unfollow(req.ctx, req.params.userId, function(err) {
        if (err) {
            return res.send(err.code, err.msg);
        }

        return res.send(200);
    });
});
