var cassandra = require('oae-util/lib/cassandra');

module.exports.testKeyspaceExists = function(test) {
    test.expect(6);

    var keyspace = "keyspacetest" + Math.floor(Math.random()*100000000);
    cassandra.createKeyspace(keyspace, function(err, created) {
        test.ok(!err);
        test.ok(created);

        cassandra.keyspaceExists(keyspace, function(err, exists) {
            test.ok(!err);
            test.ok(exists);

            cassandra.dropKeyspace(keyspace, function(err, dropped) {
                test.ok(!err);
                test.ok(dropped);

                test.done();
            });
        });
    });
};

module.exports.testColumnFamily = function(test) {
    test.expect(8);

    var name = "cf" + Math.floor(Math.random()*10000000);
    cassandra.createColumnFamily(name, "create table " + name + " (key_id text primary key)", function(err, created) {
        test.ok(!err);
        test.ok(created);

         // Check if it exists.
        cassandra.columnFamilyExists(name, function(err, exists) {
            test.ok(!err);
            test.ok(exists);

            // Drop it.
            cassandra.dropColumnFamily(name, function(err, dropped) {
                test.ok(!err);
                test.ok(dropped);

                // Make sure it's gone.
                cassandra.columnFamilyExists(name, function(err, exists) {
                    test.ok(!err);
                    test.ok(!exists);

                    test.done();
                });
            });
        });
    })
};

module.exports.testColumnFamilies = function(test) {
    test.expect(10);

    var name1 = 'cf' + Math.floor(Math.random()*10000000);
    var name2 = 'cf' + Math.floor(Math.random()*10000000);

    cassandra.createColumnFamilies({
        name1: 'create table ' + name1 + ' (key_id text primary key)',
        name2: 'create table ' + name2 + ' (key_id text primary key)'
    }, function(err) {
        test.ok(!err);
        // Check if it exists.
        cassandra.columnFamilyExists(name1, function(err, exists) {
            test.ok(!err);
            test.ok(exists);
            cassandra.columnFamilyExists(name2, function(err, exists) {
                test.ok(!err);
                test.ok(exists);
                // Remove them
                cassandra.dropColumnFamilies([name1, name2], function(err){
                    test.ok(!err);
                    // Check if they still exist
                    cassandra.columnFamilyExists(name1, function(err, exists) {
                        test.ok(!err);
                        test.ok(!exists);
                        cassandra.columnFamilyExists(name2, function(err, exists) {
                            test.ok(!err);
                            test.ok(!exists);
                            test.done();
                        });
                    });
                });
            });
        });
    });
};
