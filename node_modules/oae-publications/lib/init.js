/*!
 * Copyright 2013 Apereo Foundation (AF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var Cassandra = require('oae-util/lib/cassandra');

var SymplecticIngester = require('./ingesters/symplectic/ingester');

module.exports = function(config, callback) {
    ensureSchema(function(err) {
        if (err) {
            return callback(err);
        }

        SymplecticIngester.refreshConfiguration(config, callback);
    });
};

/**
 * Ensure that the all of the publications-related schemas are created. If they already exist, this method will not do anything.
 *
 * @param  {Function}    callback       Invoked when the process completes
 * @param  {Object}      callback.err   Error object, containing the error message if any
 * @api private
 */
var ensureSchema = function(callback) {
    Cassandra.createColumnFamilies({
        'Publications': 'CREATE COLUMNFAMILY Publications (publicationId text PRIMARY KEY, displayName text, date bigint, thumbnailUri text, publisher text, openAccessType text, issueNumber text, pageBegin text, pageEnd text);',
        'PublicationsBySource': 'CREATE COLUMNFAMILY PublicationsBySource (sourceId text PRIMARY KEY, publicationId text);',
        'PublicationsByUser': 'CREATE COLUMNFAMILY PublicationsByUser (userId text PRIMARY KEY);',
        'PublicationsAuthors': 'CREATE COLUMNFAMILY PublicationsAuthors (publicationId text PRIMARY KEY);'
    }, callback);
};
