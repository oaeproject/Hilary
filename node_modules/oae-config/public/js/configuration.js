    //////////////////////
    //// DATA STORING ////
    //////////////////////

    /**
     * Writes the configuration changes for a tenant/global to Cassandra
     */
    var writeConfig = function() {
        var data = {};
        $.each($(this).context, function(index, item) {
            if ($(item).attr('data-tenantId')) {
                if ($(item).attr('type') === "text") {
                    data[$(item).attr('id')] = $(item).val();
                } else if ($(item).attr('type') === "checkbox") {
                    if ($(item).is(':checked') + '' != $(item).attr('data-originalvalue')) {
                        data[$(item).attr('id')] = $(item).is(':checked');
                    }
                }
            }
        });

        if (!$.isEmptyObject(data)) {
            $.ajax({
                url: '/api/config',
                type: 'POST',
                data: data,
                success: function() {
                    $.each(data, function(i, item){
                        $('#' + i.replace(/\//g, '\\/')).attr('data-originalvalue', item);
                    });
                    showSuccess({
                        'title': 'Configuration saved.',
                        'message': 'The configuration was successfully saved.'
                    });
                }, error: function() {
                    showError({
                        'title': 'Configuration not saved.',
                        'message': 'The configuration could not be saved successfully.'
                    });
                }
            });
        }
        return false;
    };

    /**
     * Creates a new tenant and starts it up immediately
     */
    var createTenant = function(callback) {
        $.ajax({
            url: '/api/tenant/create',
            type: 'POST',
            data: {
                'id': $('#createtenant_id').val(),
                'name': $('#createtenant_name').val(),
                'port': $('#createtenant_port').val(),
                'baseurl': $('#createtenant_baseurl').val()
            },
            success: function(data) {
                if ($.isFunction(callback)) {
                    callback(data);
                } else {
                    initializeTenants();
                }
            }
        });
    };

    /**
     * Deletes a tenant server
     * @param {Object}    tenants    Array of tenants to be deleted
     * @param {Function}  callback   Executed after the tenants have been deleted
     */
    var deleteTenant = function(tenants, callback) {
        var ports = [];
        $.each(tenants, function(index, tenant) {
            ports.push(tenant.port);
        });

        $.ajax({
            url: '/api/tenant/delete',
            type: 'POST',
            data: {
                'tenants': ports
            },
            success: function(data) {
                if ($.isFunction(callback)) {
                    callback(true);
                }
            }, error: function() {
                if ($.isFunction(callback)) {
                    callback();
                }
            }
        });
    };

    /**
     * Starts or stops a tenant server
     * @param {Object}    tenants   Array of tenants to be started/stopped
     * @param {Boolean}   isStart   If set to true the tenants need to be started
     * @param {Function}  callback  Executed after the tenants have been started/stopped
     */
    var startStopTenant = function(tenants, isStart, callback) {
        var ports = [];
        $.each(tenants, function(index, tenant) {
            ports.push(tenant.port);
        });

        var url = '/api/tenant/stop';
        if (isStart) {
            url = '/api/tenant/start';
        }

        $.ajax({
            url: url,
            type: 'POST',
            data: {
                'tenants': ports
            },
            success: function(data) {
                if ($.isFunction(callback)) {
                    callback(true);
                }
            }, error: function() {
                if ($.isFunction(callback)) {
                    callback();
                }
            }
        });
    };


    ///////////////////////
    //// DATA FETCHING ////
    ///////////////////////

    /**
     * Gets the configuration for the tenant (includes all module and tenant configuration)
     * @param {Function} callback Callback function executed after the request completes. Passes through the returned data
     */
    var getConfiguration = function(callback) {
        $.ajax({
            url: '/api/config',
            success: function(data) {
                if ($.isFunction(callback)) {
                    callback(data);
                }
            }
        });
    };

    /**
     * Gets the data for tenants
     * @param {Function} callback Callback function executed after the request completes. Passes through the returned data
     */
    var getTenants = function(callback) {
        $.ajax({
            url: '/api/tenants',
            success: function(data) {
                if ($.isFunction(callback)) {
                    callback(sortTenantsOnPort(data));
                }
            }
        });
    };
