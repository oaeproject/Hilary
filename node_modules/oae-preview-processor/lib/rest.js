/*!
 * Copyright 2013 Apereo Foundation (AF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var _ = require('underscore');

var log = require('oae-logger').logger('preview-processor-rest');
var OAE = require('oae-util/lib/oae');
var Util = require('oae-util/lib/util');

var PreviewProcessorAPI = require('oae-preview-processor');

/*!
 * Reprocesses failed previews for all content items whose last preview is in the given list of statuses
 */
OAE.globalAdminServer.post('/api/content/reprocessPreviews', function(req, res) {
    req.telemetryUrl = '/api/content/reprocessPreviews';
    var statuses = null;
    if (req.body.status) {
        if (_.isArray(req.body.status)) {
            statuses = req.body.status;
        } else {
            statuses = [req.body.status];
        }
    }

    PreviewProcessorAPI.reprocessPreviews(req.ctx, statuses, function(err) {
        if (err) {
            return res.send(err.code, err.msg);
        }
        res.send(200);
    });
});

/*!
 * Reprocess the preview of a revision
 *
 * @param  {Request}    The express request
 * @param  {Response}   The express response
 */
var _handleReprocessPreview = function(req, res) {
    req.telemetryUrl = '/api/content/contentId/revision/revisionId/reprocessPreview';
    PreviewProcessorAPI.reprocessPreview(req.ctx, req.params.contentId, req.params.revisionId, function(err) {
        if (err) {
            return res.send(err.code, err.msg);
        }

        res.send(200);
    });
};

/*!
 * Reprocess a single revision's preview for a content item
 */
OAE.globalAdminServer.post('/api/content/:contentId/revision/:revisionId/reprocessPreview', _handleReprocessPreview);
OAE.tenantServer.post('/api/content/:contentId/revision/:revisionId/reprocessPreview', _handleReprocessPreview);
