/*!
 * Copyright 2013 Apereo Foundation (AF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var _ = require('underscore');

var AuthzUtil = require('oae-authz/lib/util');
var TenantsAPI = require('oae-tenants');

///////////
// Model //
///////////

/**
 * The main content object model.
 *
 * @param  {String}     tenantAlias         The alias of the tenant this content item is being created in
 * @param  {String}     id                  The globally unique content ID for this content item
 * @param  {String}     visibility          The visibility of the content item (e.g. public, loggedin, private)
 * @param  {String}     displayName         The title of the content item
 * @param  {String}     description         The description of the content item
 * @param  {String}     resourceSubType     The type of content this content item represents (e.g. file, collabdoc, link)
 * @param  {String}     createdBy           The ID of the user who created this content item
 * @param  {Number}     created             The timestamp at which this content item was created in milliseconds since epoch
 * @param  {Number}     lastModified        The timestamp at which this content item was modified for the last time in milliseconds since epoch
 * @param  {String}     latestRevisionId    The ID of the latest revision associated with this piece of content.
 */
module.exports.Content = function(tenantAlias, id, visibility, displayName, description, resourceSubType, createdBy, created, lastModified, latestRevisionId) {
    var that = {};
    var resourceId = AuthzUtil.getResourceFromId(id).resourceId;

    that.tenant = TenantsAPI.getCachedTenantByAlias(tenantAlias).compact();
    that.id = id;
    that.visibility = visibility;
    that.displayName = displayName;
    that.description = description;
    that.resourceSubType = resourceSubType;
    that.createdBy = createdBy;
    that.created = created;
    that.lastModified = lastModified;
    if (resourceSubType === 'file') {
        that.downloadPath = '/api/content/' + id + '/download/' + latestRevisionId;
    }
    that.profilePath = '/content/' + tenantAlias + '/' + resourceId;
    that.resourceType = 'content';
    that.latestRevisionId = latestRevisionId;

    return that;
};

/**
 * The revision model.
 *
 * @param  {String}     contentId       The globally unique content ID of the piece of content that is getting a revision.
 * @param  {String}     revisionId      The ID of the revision
 * @param  {String}     createdBy       The ID of the user who created this revision.
 * @param  {Number}     created         The timestamp that this revision was created in milliseconds since epoch.
 * @param  {Object}     opts            Any optional parameters (such as filename, mimetype, ..) you wish to pass along. Each key in the opts object will be exposed as a key on the revision object.
 * @param  {String}     opts.previewsId The storage directory of the previews of the revision, within the content item
 */
module.exports.Revision = function(contentId, revisionId, createdBy, created, opts) {
    var that = _.extend({}, opts);
    that.contentId = contentId;
    that.revisionId = revisionId;
    that.createdBy = createdBy;
    that.created = created;

    return that;
};
