/*!
 * Copyright 2013 Apereo Foundation (AF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var passport = require('passport');

var OAE = require('oae-util/lib/oae');

var AuthenticationConstants = require('oae-authentication/lib/constants').AuthenticationConstants;
var AuthenticationUtil = require('oae-authentication/lib/util');

/*!
 * Redirect the user to Facebook for authentication. When complete,
 * Facebook will redirect the user back to the application at
 * /api/auth/facebook/callback
 */
OAE.tenantRouter.on('get', '/api/auth/facebook', function(req, res, next) {
    var strategyId = AuthenticationUtil.getStrategyId(req.tenant, AuthenticationConstants.providers.FACEBOOK);
    var errorHandler = AuthenticationUtil.handlePassportError(req, res, next);
    passport.authenticate(strategyId, {'scope': ['email']})(req, res, errorHandler);
});

/*!
 * Facebook will redirect the user to this URL after approval. Finish the
 * authentication process by attempting to obtain an access token. If
 * access was granted, the user will be logged in. Otherwise,
 */
OAE.tenantRouter.on('get', '/api/auth/facebook/callback', function(req, res, next) {
    var strategyId = AuthenticationUtil.getStrategyId(req.tenant, AuthenticationConstants.providers.FACEBOOK);
    var errorHandler = AuthenticationUtil.handlePassportError(req, res, next);
    passport.authenticate(strategyId, {'failureRedirect': '/'}, function(err, user) {
        AuthenticationUtil.externalSuccessCallback(req, res, user, AuthenticationConstants.providers.FACEBOOK, next);
    })(req, res, errorHandler);
});
