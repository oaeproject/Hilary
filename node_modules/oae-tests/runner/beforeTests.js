/*
 * Copyright 2012 Sakai Foundation (SF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://www.osedu.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var argv = require('optimist')
    .usage('Run the Hilary tests.\nUsage: $0')
    .alias('m', 'module')
    .describe('m', 'Only run a specific module. Just specify the module name.')
    .argv;

var fs = require('fs');
var log = require('oae-logger').logger('before-tests');
var Cassandra = require('oae-util/lib/cassandra');
var OAE = require('oae-util/lib/oae');
var Redis = require('oae-util/lib/redis');
var config = require('../../../config').config;

// The Cassandra connection config that should be used for unit tests, using
// a custom keyspace for just the tests
config.cassandra.keyspace = 'oaeTest';

// We'll stick all our redis data in a separate DB index.
config.redis.dbIndex = 1;

// log everything (except mocha output) to tests.log
config.log.streams = [{
    'level': 'debug',
    'path': './tests.log'
}];

/**
 * This is executed once all of the tests for all of the different modules have finished
 * running or when one of the tests has caused an error. It cleans up the test keypsace.
 * @param {Object}      err     Standard error object, containing the error message
 */
var finishTests = function(callback) {
    // Clean up after ourselves
    Cassandra.dropKeyspace(config.cassandra.keyspace, function(err) {
        if (err) {
            log().error({err: err}, 'Error dropping keyspace after test completion.');
        }
        Redis.flush(function(err) {
            if (err) {
               log().error({err: err}, 'Error flushing Redis data after test completion.');
            }
            callback();
        });
    });
};

/**
 * Create 2 default tenants that can be used for testing our REST endpoints
 * @param {Object}      err     Standard error object, containing the error message for the
 *                              keyspace creation
 */
var setUpTenants = function(err, callback) {
    if (err) {
        log().error({err: err}, 'Error on keyspace creation.');
        throw new Error("Error on keyspace creation. Aborting unit tests.");
    }
    var tenantAPI = require('oae-tenants');
    global.oaeTests = {'tenants': {}};
    tenantAPI.createTenant("camtest", "Cambridge University Test", 2001, "localhost:2001", function(err, tenant) {
        global.oaeTests.tenants.cam = tenant;
        tenantAPI.createTenant("gttest", "Georgia Tech Test", 2002, "localhost:2002", function(err, tenant) {
            global.oaeTests.tenants.gt = tenant;
            // Because the actual server startup is async from the createTenant request we wait a bit till they have started up.
            setTimeout(callback, 2000);
        });
    });
};

if (process.env.OAE_COVERING) {
    // If we're running in coverage mode we supress log output.
    console.log = function() {};
}
// First set up the keyspace and all of the column families required
// for all of the different OAE modules
before(function(callback) {
    // drop the keyspace before starting
    Cassandra.init(config.cassandra, function(err) {
        Redis.init(config.redis);
        log().info('Dropping keyspace "%s" to clean up before tests.', config.cassandra.keyspace);
        Cassandra.dropKeyspace(config.cassandra.keyspace, function(err) {
            Cassandra.close(function() {
                log().info('Flushing redis DB index "%d" to clean up before tests.', config.redis.dbIndex);
                Redis.flush(function(err) {
                    OAE.init(config, function(err) {
                        setUpTenants(err, callback);
                    });
                });
            });
        });
    });
});

// Drop the keyspace after all the tests are done.
after(function(callback) {
    finishTests(callback);
});
