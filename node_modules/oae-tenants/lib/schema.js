var api = require('oae-tenants/lib/api');
var OAE = require('oae-util/lib/OAE');

var DEFAULT_TENANT_PORT = 2001;

/**
 * Ensure that the tenant schema is created. If the tenant schema has not been created, or the default tenant has not been seeded,
 * both will be performed automatically. If both the schema and the default tenant exist, then this method will do nothing.
 * 
 * @param {Function} callback A function(err), specifying whether or not there was an error creating the schema.
 */
module.exports.ensureSchema = function(callback) {
    // Bootstrap the Tenant CF, if necessary
    OAE.runQuery('create columnfamily Tenant (port text primary key, alias text, name text, description text)', false, function(err) {

        if (!err)
            console.info('Automatically created the "Tenant" column family.');

        // ensure the default tenant exists
        if (!err || (err.why && err.why.indexOf('existing column family') > -1)) {
            api.getTenantByPort(DEFAULT_TENANT_PORT, function(tenant, err) {
                if (!err) {
                    if (tenant === null) {
                        api.createTenant('default', 'Default', 'The default tenant', DEFAULT_TENANT_PORT, function(tenant, err) {
                            if (!err) {
                                console.info('Created the default tenant on port '+DEFAULT_TENANT_PORT);
                                callback();
                            } else {
                                callback(err);
                            }
                        });
                    } else {
                        callback();
                    }
                } else {
                    callback(err);
                }
            });
        } else {
            callback(err);
        }
    });
};

/**
 * Drop the tenant schema and all of its data.
 *
 * @param {Function} callback A function(err), specifying whether or not there was an error dropping the schema
 */
module.exports.dropSchema = function(callback) {
    OAE.runQuery('drop columnfamily Tenant', false, function(err) {
        if (err && err.why && err.why.indexOf('non existing column family') > -1)
            err = false;
        callback(err);
    });
}