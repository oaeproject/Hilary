var Cassandra = require('oae-util/lib/cassandra');

/**
 * Ensure that the all of the principal-related schemas are created. If they already exist, this method will not
 * do anything
 * @param {Function(err)}    callback       A function(err), specifying whether or not there was an error creating the schema.
 * @param {Object}           callback.err   Error object, containing the error message
 */
module.exports.ensureSchema = function(callback) {
    callback = callback || function() {};
    Cassandra.createColumnFamilies({
        'Principals': "create table Principals(principal_id text PRIMARY KEY, tenant text, privacy_setting text, alias text, user_institution_user_id text, user_first_name text, user_last_name text, user_email text, user_picture text, group_title text, group_description text, group_membership_type ascii) WITH comment='Principal information' ;",
        'GroupMembers': "create table GroupMembers (group_id text PRIMARY KEY) WITH comment='Holds all the members for a group in one row';",
        'MemberOf': "create table MemberOf (principal_id text PRIMARY KEY) WITH comment='Holds all the groups that a principal is a (in)direct member of.';"
    }, callback);
};

/**
 * Drop the tenant schema and all of its data.
 *
 * @param {Function} callback A function(err), specifying whether or not there was an error dropping the schema
 */
module.exports.dropSchema = function(callback) {
    callback = callback || function() {};
    Cassandra.dropColumnFamilies(['Principals', 'GroupMembers', 'MemberOf'], callback);
};