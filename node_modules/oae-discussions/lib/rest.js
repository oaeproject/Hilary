/*!
 * Copyright 2012 Sakai Foundation (SF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://www.osedu.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var _ = require('underscore');

var OAE = require('oae-util/lib/oae');
var PreviewProcessorAPI = require('oae-preview-processor');
var Util = require('oae-util/lib/util');

var DiscussionsAPI = require('oae-discussions');
var DiscussionsConstants = require('oae-discussions/lib/constants').DiscussionsConstants;


//////////////////////////////
// CREATE / GET DISCUSSIONS //
//////////////////////////////

/*!
 * Create a new discussion
 */
OAE.tenantServer.post('/api/discussions/create', function(req, res) {
    req.telemetryUrl = '/api/discussions/create';

    var members = {};
    if (_.isArray(req.body.managers)) {
        _.each(req.body.managers, function(manager) {
            members[manager] = DiscussionsConstants.roles.MANAGER;
        });
    } else if (_.isString(req.body.managers)) {
        members[req.body.managers] = DiscussionsConstants.roles.MANAGER;
    }

    if (_.isArray(req.body.members)) {
        _.each(req.body.members, function(member) {
            members[member] = DiscussionsConstants.roles.MEMBER;
        });
    } else if (_.isString(req.body.members)) {
        members[req.body.members] = DiscussionsConstants.roles.MEMBER;
    }

    DiscussionsAPI.Discussions.createDiscussion(req.ctx, req.body.displayName, req.body.description, req.body.visibility, members, null, function(err, discussion) {
        if (err) {
            return res.send(err.code, err.msg);
        }

        res.send(200, discussion);
    });
});

/*!
 * Update a discussion
 */
OAE.tenantServer.post('/api/discussions/:discussionId', function(req, res) {
    req.telemetryUrl = '/api/discussions/id';
    DiscussionsAPI.Discussions.updateDiscussion(req.ctx, req.params.discussionId, req.body, function(err, discussion) {
        if (err) {
            return res.send(err.code, err.msg);
        }

        res.send(200, discussion);
    });
});

/*!
 * Get a user or group's discussions library
 */
OAE.tenantServer.get('/api/discussions/library/:principalId', function(req, res) {
    req.telemetryUrl = '/api/discussions/library/principalId';
    DiscussionsAPI.Discussions.getDiscussionsLibrary(req.ctx, req.params.principalId, req.query.start, req.query.limit, function(err, discussions, nextToken) {
        if (err) {
            return res.send(err.code, err.msg);
        }

        res.send(200, {'results': discussions, 'nextToken': nextToken});
    });
});

/*!
 * Delete a discussion from a user or group library
 */
OAE.tenantServer.post('/api/discussions/library/:principalId/:discussionId', function(req, res) {
    req.telemetryUrl = '/api/discussions/library/principalId/id';
    DiscussionsAPI.Discussions.removeDiscussionFromLibrary(req.ctx, req.params.principalId, req.params.discussionId, function(err) {
        if (err) {
            return res.send(err.code, err.msg);
        }

        res.send(200);
    });
});

/*!
 * Get a full discussion profile
 */
OAE.tenantServer.get('/api/discussions/:discussionId', function(req, res) {
    req.telemetryUrl = '/api/discussions/id';
    DiscussionsAPI.Discussions.getFullDiscussionProfile(req.ctx, req.params.discussionId, function(err, discussion) {
        if (err) {
            return res.send(err.code, err.msg);
        }

        res.send(200, discussion);
    });
});


//////////////////////////////////////
// UPDATE / GET DISCUSSIONS MEMBERS //
//////////////////////////////////////

/*!
 * Share a discussion
 */
OAE.tenantServer.post('/api/discussions/:discussionId/share', function(req, res) {
    req.telemetryUrl = '/api/discussions/id/share';

    var members = (_.isArray(req.body.members)) ? req.body.members : [req.body.members];
    members = _.compact(members);

    DiscussionsAPI.Discussions.shareDiscussion(req.ctx, req.params.discussionId, members, function(err) {
        if (err) {
            return res.send(err.code, err.msg);
        }
        res.send(200);
    });
});

/*!
 * Set discussion permissions
 */
OAE.tenantServer.post('/api/discussions/:discussionId/members', function(req, res) {
    req.telemetryUrl = '/api/discussions/id/members';

    // Parse the incoming false values
    var permissionUpdates = {};
    _.each(req.body, function(value, key) {
        permissionUpdates[key] = Util.castToBoolean(value);
    });

    DiscussionsAPI.Discussions.setDiscussionPermissions(req.ctx, req.params.discussionId, permissionUpdates, function(err) {
        if (err) {
            return res.send(err.code, err.msg);
        }
        res.send(200);
    });
});

/*!
 * Get discussion members
 */
OAE.tenantServer.get('/api/discussions/:discussionId/members', function(req, res) {
    req.telemetryUrl = '/api/discussions/id/members';
    DiscussionsAPI.Discussions.getDiscussionMembers(req.ctx, req.params.discussionId, req.query.start, req.query.limit, function(err, members) {
        if (err) {
            return res.send(err.code, err.msg);
        }

        res.send(200, {'results': members});
    });
});


//////////////////////////////////////
// CREATE / GET DISCUSSION MESSAGES //
//////////////////////////////////////

/*!
 * Get a list of messages from the discussion
 */
OAE.tenantServer.get('/api/discussions/:discussionId/messages', function(req, res) {
    req.telemetryUrl = '/api/discussions/id/messages';
    DiscussionsAPI.Discussions.getMessages(req.ctx, req.params.discussionId, req.query.start, req.query.limit, function(err, messages) {
        if (err) {
            return res.send(err.code, err.msg);
        }

        res.send(200, {'results': messages});
    });
});

/*!
 * Create a new message in a discussion
 */
OAE.tenantServer.post('/api/discussions/:discussionId/messages', function(req, res) {
    req.telemetryUrl = '/api/discussions/id/messages';
    DiscussionsAPI.Discussions.createMessage(req.ctx, req.params.discussionId, req.body.body, req.body.replyTo, function(err, message) {
        if (err) {
            return res.send(err.code, err.msg);
        }

        res.send(200, message);
    });
});

/*!
 * Delete a message in a discussion
 */
OAE.tenantServer.del('/api/discussions/:discussionId/messages/:created', function(req, res) {
    req.telemetryUrl = '/api/discussions/id/messages/created';
    DiscussionsAPI.Discussions.deleteMessage(req.ctx, req.params.discussionId, req.params.created, function(err, message) {
        if (err) {
            return res.send(err.code, err.msg);
        }

        res.send(200, message);
    });
});
