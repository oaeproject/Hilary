var LoodleAPI = require('oae-loodle');
var LoodleConstants = require('oae-loodle/lib/constants').LoodleConstants;

var ActivityAPI = require('oae-activity');
var ActivityConstants = require('oae-activity/lib/constants').ActivityConstants;
var ActivityModel = require('oae-activity/lib/model');

// Vote update
ActivityAPI.registerActivityType(LoodleConstants.activity.ACTIVITY_LOODLE_UPDATE_VOTES, {
    'groupBy': [{'object': true}],
    'streams': {
        'activity': {
            'router': {
                'actor': ['self'],
                'object': ['self', 'managers']
            }
        },
        'notification': {
            'router': {
                'object': ['managers']
            }
        },
        'email': {
            'router': {
                'object': ['managers', '^online-authors']
            }
        }
    }
});

// Schedule update
ActivityAPI.registerActivityType(LoodleConstants.activity.ACTIVITY_LOODLE_UPDATE_SCHEDULES, {
    'groupBy': [{'object': true}],
    'streams': {
        'activity': {
            'router': {
                'actor': ['self'],
                'object': ['self', 'members']
            }
        },
        'notification': {
            'router': {
                'object': ['members']
            }
        },
        'email': {
            'router': {
                'object': ['members', '^online-authors']
            }
        }
    }
});

/*!
 * Post a loodle-update-schedules activity when a user has change schedules to a loodle document
 */
LoodleAPI.on(LoodleConstants.events.EDITED_LOODLE_SCHEDULES, function (ctx, contentObj) {

    var millis = Date.now();
    var actorResource = new ActivityModel.ActivitySeedResource('user', ctx.user().id, {'user': ctx.user()});
    var objectResource = new ActivityModel.ActivitySeedResource('content', contentObj.id, {'content': contentObj});
    var activitySeed = new ActivityModel.ActivitySeed(LoodleConstants.activity.ACTIVITY_LOODLE_UPDATE_SCHEDULES, millis, ActivityConstants.verbs.UPDATE, actorResource, objectResource);
    ActivityAPI.postActivity(ctx, activitySeed);

});

/*!
 * Post a loodle-update-votes activity when a user has change votes to a loodle document
 */
LoodleAPI.on(LoodleConstants.events.EDITED_LOODLE_VOTES, function (ctx, contentObj) {

    var millis = Date.now();
    var actorResource = new ActivityModel.ActivitySeedResource('user', ctx.user().id, {'user': ctx.user()});
    var objectResource = new ActivityModel.ActivitySeedResource('content', contentObj.id, {'content': contentObj});
    var activitySeed = new ActivityModel.ActivitySeed(LoodleConstants.activity.ACTIVITY_LOODLE_UPDATE_VOTES, millis, ActivityConstants.verbs.UPDATE, actorResource, objectResource);
    ActivityAPI.postActivity(ctx, activitySeed);

});
