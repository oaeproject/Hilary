/*!
 * Copyright 2014 Apereo Foundation (AF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var _ = require('underscore');
var locale = require('locale');

var OAE = require('oae-util/lib/oae');
var TZ = require('oae-util/lib/tz');

var PrincipalsAPI = require('./api');



////////////
// LOCALE //
////////////

var languages = require('../config/user').user.elements.defaultLanguage.list;

// Make languages into an array of just the values as that's what locale needs
languages = _.map(languages, function(l) { return l.value; });

// Unset locale's default language instead of process.env.LANG
locale.Locale.default = null;
OAE.tenantServer.use(locale(languages));

/*!
 * Copy the request locale into the context
 */
OAE.tenantServer.use(function(req, res, next) {
    req.ctx.locale(req.locale);
    next();
});



//////////////////////////
// TERMS AND CONDITIONS //
//////////////////////////

/*!
 * Adds middleware that will check if the user has accepted the Terms and Conditions, if enabled.
 * If the user hasn't accepted the Terms and Conditions, all POST requests (excluding whitelisted post requests) will be prevented.
 */
OAE.tenantServer.use(function(req, res, next) {
    var ctx = req.ctx;
    var user = ctx.user();

    // The Terms and Conditions middleware is only applicable on logged in users who try to interact with the system
    // excluding a set of whitelisted endpoints
    if (user && !_.contains(['GET', 'HEAD'], req.method) && PrincipalsAPI.needsToAcceptTermsAndConditions(ctx) && !_isWhiteListed(req.path)) {
        return res.send(419, 'You need to accept the Terms and Conditions before you can interact with this tenant');
    }

    next();
});

/**
 * Checks if a URL is whitelisted from the Terms and Conditions requirements
 *
 * @param  {String}     url     The URL to check
 * @return {Boolean}            `true` if the user doesn't have to accept the Terms and Conditions in order to POST to this url, `false` otherwise
 * @api private
 */
var _isWhiteListed = function(url) {
    return (url.indexOf('/api/auth') === 0 || url.indexOf('/api/user') === 0);
};



////////////////////
// REST ENDPOINTS //
////////////////////

/*!
 * Crops the large picture that is associated with a principal.
 */
OAE.tenantRouter.on('post', '/api/crop', function(req, res) {
    PrincipalsAPI.generateSizes(req.ctx, req.body.principalId, req.body.x, req.body.y, req.body.width, function(err, data) {
        if (err) {
            return res.send(err.code, err.msg);
        }

        return res.send(200, data);
    });
});

/**
 * Gets the list of timezones and their current UTC offsets
 */
OAE.tenantRouter.on('get', '/api/timezones', function(req, res) {
    return res.send(200, TZ.getZones());
});


// Require the user related REST endpoints
require('oae-principals/lib/rest.user.js');

// Require the group related REST endpoints
require('oae-principals/lib/rest.group.js');
