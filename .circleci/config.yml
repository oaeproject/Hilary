version: 2
jobs:
  test-with-dockers:
    docker:
      - image: alpine:3.7
    working_directory: ~/Hilary
    steps:
      - setup_remote_docker
      - run:
          name: Install dependencies
          command: >
            apk add --update --no-cache
            curl
            git
            openssh-client
      - checkout
      - run:
          name: Checkout submodules
          command: git submodule update --init --recursive
      - run:
          name: Creating folders for file storage and tmp files
          command: >
            mkdir -p ../files
            && mkdir -p ../tmp
      - run:
          name: Setting up volumes in docker-compose
          command: >
            sed -i -e 's/- \/src\/Hilary/- \/root\/Hilary/g' docker-compose.yml
            && sed -i -e 's/- \/src\/files/- \/root\/files/g' docker-compose.yml
            && sed -i -e 's/\/src\/tmp/\/root\/tmp/g' docker-compose.yml
      - run:
          name: Adjusting Hilary configuration for tests to run
          command: >
            printf "\nconfig.ui.path = './3akai-ux';" >> config.js
            && printf "\nconfig.cassandra.hosts = ['oae-cassandra'];" >> config.js
            && printf "\nconfig.cassandra.timeout = 9000;" >> config.js
            && printf "\nconfig.redis.host = 'oae-redis';" >> config.js
            && printf "\nconfig.search.hosts[0].host = 'oae-elasticsearch';" >> config.js
            && printf "\nconfig.mq.connection.host = 'oae-rabbitmq';" >> config.js
            && printf "\nconfig.etherpad.hosts[0].host = 'oae-etherpad';" >> config.js
            && printf "\nconfig.previews.enabled = true;" >> config.js
            && printf "\nconfig.email.debug = false;" >> config.js
            && printf "\nconfig.email.transport = 'sendmail';" >> config.js
      - run:
          name: Install docker and docker-compose
          command: >
            apk add --update --no-cache
            docker
            py-pip
            && pip install docker-compose
      - run:
          name: Create the containers
          command: docker-compose up --no-start --build
      - run:
          name: Start the containers we need
          # we need some time for cassandra to boot before starting etherpad
          command: >
            docker-compose up -d
            oae-cassandra
            oae-redis
            oae-rabbitmq
            oae-elasticsearch
            && sleep 25s
            && docker-compose up -d oae-etherpad
      - run:
          name: Install Hilary dependencies
          command: >
            docker cp /root/Hilary oae-hilary:/usr/src
            && docker-compose run oae-hilary 'npm install'
      - run:
          name: Run tests
          command: docker-compose run oae-hilary 'grunt test'

workflows:
  version: 2
  test-all:
    jobs:
      - test-with-dockers
  scheduled:
    triggers:
      - schedule:
          cron: "0 1 * * *"
          filters:
            branches:
              only: master
    jobs:
      - test-with-dockers
