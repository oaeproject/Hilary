/*!
 * Copyright 2014 Apereo Foundation (AF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var _ = require('underscore');

var log = require('oae-logger').logger('preview-processor-rest');
var OAE = require('oae-util/lib/oae');
var Util = require('oae-util/lib/util');

var PreviewProcessorAPI = require('oae-preview-processor');

/*!
 * Reprocesses failed previews for all content items who match the given set of filters.
 * Due to the variety of use-cases for reprocessing previews there are a couple of different options
 * to filter content and their revisions.
 *
 * It's important to understand that this is a heavy process and it's best to be as precise as possible.
 *
 * There are a couple of use-cases:
 *
 * 1/ A new processor for PDF files has been introduced
 *     content_resourceSubType: 'file'
 *     revision_mimeType: 'application/pdf'
 *
 * 2/ The processors have been updated and can now handle more content, all revisions that were ignored or failed should be reprocessed
 *     revision_previewsStatus: ['ignored', 'error']
 *
 * 3/ A processor had been silently failing for a while and content from that period should be reprocessed
 *     revision_createdAfter: 1379063394146
 *     revision_createdBefore: 1379754621656
 *
 * 4/ The CTO of your university is at your desk and demanding you reprocess al his content because it's a full moon that night
 *     revision_createdBy: u:tenant:123def
 */
OAE.globalAdminRouter.on('post', '/api/content/reprocessPreviews', function(req, res) {
    req.telemetryUrl = '/api/content/reprocessPreviews';
    var filters = {};

    _.each(req.body, function(value, name) {
        if (name.indexOf('content_') === 0) {
            filters.content = filters.content || {};
            filters.content[name.substr(8)] = value;
        } else if (name.indexOf('revision_') === 0) {
            filters.revision = filters.revision || {};
            filters.revision[name.substr(9)] = value;
        }
    });

    PreviewProcessorAPI.reprocessPreviews(req.ctx, filters, function(err) {
        if (err) {
            return res.send(err.code, err.msg);
        }
        res.send(200);
    });
});

/*!
 * Reprocess the preview of a revision
 *
 * @param  {Request}    The express request
 * @param  {Response}   The express response
 */
var _handleReprocessPreview = function(req, res) {
    PreviewProcessorAPI.reprocessPreview(req.ctx, req.params.contentId, req.params.revisionId, function(err) {
        if (err) {
            return res.send(err.code, err.msg);
        }

        res.send(200);
    });
};

/*!
 * Reprocess a single revision's preview for a content item
 */
OAE.globalAdminRouter.on('post', '/api/content/:contentId/revision/:revisionId/reprocessPreview', _handleReprocessPreview);
OAE.tenantRouter.on('post', '/api/content/:contentId/revision/:revisionId/reprocessPreview', _handleReprocessPreview);
