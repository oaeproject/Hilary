/*
 * Copyright 2012 Sakai Foundation (SF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://www.osedu.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var amqp = require('amqp');

var log = require('oae-logger').logger('message-queue');

var connection = null;

module.exports.init = function(mqConfig) {
    // Only init if the connections haven't been opened.
    if (connection === null) {
        connection = amqp.createConnection(mqConfig)
        connection.on('error', function(err) {
            log().error({'err': err}, 'Error when connecting to RabbitMQ');
        });
        connection.on('timeout', function() {
            log().error('Time-out when connecting to RabbitMQ');
        });
    }
};

/**
 * Wraps the create queue so other files can easily create a Queue to publish messages on.
 * @param  {String}   name     The name of the queue
 * @param  {Object}   options  The options for this queue.
 * @param  {Function} callback Callback method
 */
var createQueue = module.exports.createQueue = function(name, options, callback) {
    connection.queue(name, options, callback);
};

/**
 * Publish a message on a queue.
 * @param  {String} queueName The name of the queue you wish to publish a message on.
 * @param  {String} msg       The message that needs to be sent.
 */
var publish = module.exports.publish = function(queueName, msg) {
    connection.publish(queueName, msg);
};