/*!
 * Copyright 2013 Apereo Foundation (AF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var _ = require('underscore');

var OAE = require('oae-util/lib/oae');
var OaeUtil = require('oae-util/lib/util');

var Publication = require('oae-publications/lib/model').Publication;
var PublicationsAPI = require('oae-publications');
var SymplecticAPI = require('oae-publications/lib/ingesters/symplectic/api');
var SymplecticIngester = require('oae-publications/lib/ingesters/symplectic/ingester');


/*!
 * Get a publication profile
 */
OAE.tenantRouter.on('get', '/api/publications/:publicationId', function(req, res) {
    PublicationsAPI.getPublication(req.ctx, req.params.publicationId, function(err, publication) {
        if (err) {
            return res.send(err.code, err.msg);
        }

        return res.send(200, publication);
    });
});

/*!
 * Get all the publications for a user
 */
OAE.tenantRouter.on('get', '/api/publications/library/:userId', function(req, res) {
    var limit = OaeUtil.getNumberParam(req.query.limit, 10, 1, 25);
    PublicationsAPI.getPublicationsForUser(req.ctx, req.params.userId, req.query.start, limit, function(err, publications, nextToken) {
        if (err) {
            return res.send(err.code, err.msg);
        }

        return res.send(200, {'results': publications, 'nextToken': nextToken});
    });
});

/*!
 * Create a publication
 */
var createPublication = function(req, res) {
    var sourceIds = req.body.sourceIds;
    if (!_.isArray(sourceIds)) {
        sourceIds = [ sourceIds ];
    }
    var authors = req.body.authors;
    if (!_.isArray(authors)) {
        authors = [ authors ];
    }

    var publication = new Publication(null, req.body.displayName, req.body.publicationType, req.body.date, req.body.thumbnailUri, authors, req.body.publisher, {
        'issueNumber': req.body.issueNumber,
        'pageBegin': req.body.pageBegin,
        'pageEnd': req.body.pageEnd
    });

    PublicationsAPI.createPublication(req.ctx, publication, sourceIds, function(err, publication, result) {
        if (err) {
            return res.send(err.code, err.msg);
        }

        return res.send(200, {'publication': publication, 'result': result});
    });
};
OAE.globalAdminRouter.on('post', '/api/publications/create', createPublication);
OAE.tenantRouter.on('post', '/api/publications/create', createPublication);

/*!
 * Link an OAE user to a publication
 */
var linkPublication = function(req, res) {
    PublicationsAPI.linkPublicationToUser(req.ctx, req.params.publicationId, req.body.authorName, req.body.userId, function(err, result) {
        if (err) {
            return res.send(err.code, err.msg);
        }

        return res.send(200, {'result': result});
    });
};
OAE.globalAdminRouter.on('post', '/api/publications/:publicationId/link', linkPublication);
OAE.tenantRouter.on('post', '/api/publications/:publicationId/link', linkPublication);
