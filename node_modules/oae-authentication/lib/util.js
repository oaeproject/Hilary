/*
 * Copyright 2012 Sakai Foundation (SF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://www.osedu.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var passport = require('passport');

var Context = require('oae-context').Context;

/**
 * Setup the necessary authentication middleware.
 *
 * @param  {express} server     An express server
 * @param  {Tenant}  tenant     The tenant this server is being setup for.
 */
module.exports.setupAuthMiddleware = function(server, tenant) {
    // Configure passport.
    server.use(passport.initialize());
    server.use(passport.session());

    // This middleware adds the context to each request.
    server.use(function(req, res, next) {
        try {
            req.ctx = new Context(tenant, req.user);
            return next();
        } catch (err) {
            return next(err);
        }
    });


    // Add error handling middleware for authentication.
    server.use(function(err, req, res, next) {
        log(req.ctx).error({
          err: err,
          req: req,
          tenant: tenant.alias
        }, 'Error processing authentication middleware for request. Stopping the middleware chain');
    });

};