/*!
 * Copyright 2014 Apereo Foundation (AF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */
var _ = require('underscore');
var util = require('util');

var OAE = require('oae-util/lib/oae');

var SearchAPI = require('oae-search');
var SearchUtil = require('oae-search/lib/util');

var REGEX_SEARCH_ENDPOINT = /\/api\/search\/([^\/]+)(\/.*)?/;


/**
 * @REST postSearchReindexAll
 *
 * Re-index all data
 *
 * @Server      admin
 * @Method      POST
 * @Path        /search/reindexAll
 * @Return      {void}
 */
OAE.globalAdminRouter.on('post', '/api/search/reindexAll', function(req, res) {
    SearchAPI.postReindexAllTask(req.ctx, function(err) {
        if (err) {
            return res.send(err.code, err.msg);
        }

        res.send(200);
    });
});

/**
 * @REST getSearch
 *
 * Perform a search
 *
 * @Server      admin,tenant
 * @Method      GET
 * @Path        /search/{searchType}
 * @PathParam   {string}                searchType          The type of search being performed                          [content-library,followers,following,general,members,memberships-library]
 * @QueryParam  {number}                [limit]             The maximum number of search results to return
 * @QueryParam  {string}                [q]                 The search query
 * @QueryParam  {string}                [sort]              The sort direction. Defaults to asc                         [asc,desc]
 * @QueryParam  {number}                [start]             The document index from which to start. Defaults to 0
 * @Return      {SearchResponse}                            The retrieved search results
 */
var _handleSearchRequest = function(req, res) {
    var searchType = req.params[0];
    if (searchType) {
        req.telemetryUrl = util.format('/api/search/%s', searchType);
    }

    var pathParams = req.params[1] ? _.compact(req.params[1].split('/')) : [];
    var opts = _.extend({}, req.query, SearchUtil.getSearchParams(req), {'pathParams': pathParams});
    SearchAPI.search(req.ctx, searchType, opts, function(err, result) {
        if (err) {
            return res.send(err.code, err);
        }

        res.send(200, result);
    });
};

OAE.tenantRouter.on('get', REGEX_SEARCH_ENDPOINT, _handleSearchRequest, '/api/search');
OAE.globalAdminRouter.on('get', REGEX_SEARCH_ENDPOINT, _handleSearchRequest, '/api/search');
