<% include node_modules/oae-email/emailTemplates/header.html.jst %>
<% include node_modules/oae-email/emailTemplates/footer.html.jst %>

<%
    /**
     * Given a link to a resource profile, provide the link we should put in the email, with the
     * base url added if necessary. If this email is an invitation, we replace all profile links
     * with a URL to accept the invitation
     *
     * @param  {String}     profilePath     The path to the resource profile
     * @param  {String}     baseUrl         The base url to the target tenant
     * @return {String}     profileUrl      The resolved URL to the resource profile
     */
    var profileLink = function(profilePath, baseUrl) {
        if (shared.isEmail(recipient.id)) {
            return invitationUrl;
        }

        return util.url.ensureAbsoluteLink(profilePath, baseUrl);
    };

    /**
     * Render a user thumbnail picture
     *
     * @param  {ActivityViewThumbnail|ActivityEntity}    userProfile        The user profile information
     */
    var renderUserThumbnail = function(userProfile) {
        var thumbnailUrl = util.url.ensureAbsoluteLink(util.ui.getHashedPath('/ui/img/icons/user_small.png'), baseUrl);
        if (userProfile && userProfile.thumbnailUrl) {
            thumbnailUrl = util.url.ensureAbsoluteLink(userProfile.thumbnailUrl, baseUrl);
        } else if (userProfile && userProfile['oae:thumbnail']) {
            thumbnailUrl = util.url.ensureAbsoluteLink(userProfile['oae:thumbnail'].url, baseUrl);
        }

        var profilePath = null;
        if (userProfile && userProfile.profilePath) {
            profilePath = profileLink(userProfile.profilePath, baseUrl);
        } else if (userProfile && userProfile['oae:profilePath']) {
            profilePath = profileLink(userProfile['oae:profilePath'], baseUrl);
        }

        var str = '<img src="' + thumbnailUrl + '" alt="' + util.html.encodeForHTMLAttribute(userProfile.displayName) + '" />';

        // If the profile path is defined, we will make the thumbnail a link to it
        if (profilePath) {
            str =
                '<a class="thumbnail-user" href="' + profilePath +  '" title="' + util.html.encodeForHTMLAttribute(userProfile.displayName) + '">' +
                    str +
                '</a>';
        }

        print(str);
    };
%>

<%
    /**
     * Render a preview tile
     *
     * @param  {Object}    entity    The preview entity
     * @param  {Boolean}   wide      Whether or not to render the wide content preview, defaults to `false`
     */
    var renderPreviewTile = function(entity, wide) {
        var thumbnailUrl = '';

        // Determine the correct image url
        if (wide && entity.wideImageUrl) {
            thumbnailUrl = util.url.ensureAbsoluteLink(entity.wideImageUrl, baseUrl);
        } else {
            wide = false;

            if (entity.thumbnailUrl) {
                thumbnailUrl = util.url.ensureAbsoluteLink(entity.thumbnailUrl, baseUrl);
            } else {
                var resourceType = entity.resourceType;
                if (resourceType === 'content') {
                    resourceType = entity.resourceSubType;
                }
                thumbnailUrl = util.url.ensureAbsoluteLink(util.ui.getHashedPath('/ui/img/icons/' + resourceType + '.png'), baseUrl);
            }
        }

        // Determine the correct subscript for in the tile
        var resourceType = entity.resourceType;
        if (entity.resourceType === 'user') {
            resourceType = util.text.truncate(entity.tenant.displayName, 25);
        } else if (entity.resourceType === 'group') {
            resourceType = '__MSG__GROUP__';
        } else if (entity.resourceType === 'discussion') {
            resourceType = '__MSG__DISCUSSION__';
        } else if (entity.resourceType === 'content') {
            resourceType = util.text.getMimetypeDescription(entity.resourceSubType, entity.mime)
        }

        // The tile's title depends on whether we're rendering a wide title or not
        var title = util.html.encodeForHTML(util.text.truncate(entity.displayName, 30));
        if (wide) {
            title = util.html.encodeForHTML(util.text.truncate(entity.displayName, 90));
        }

        // Generate the visibility text and icon url
        var i18nVisibility = entity.tenant.alias;
        if (entity.visibility === 'public') {
            i18nVisibility = util.i18n.translate('__MSG__PUBLIC__');
        } else if (entity.visibility === 'private') {
            i18nVisibility = util.i18n.translate('__MSG__PRIVATE__');
        }

        var icon = util.ui.getHashedPath('/ui/img/icons/' + entity.visibility + '.png');

        // Aggregate the preview tile content into an array of lines of HTML content
        var lines = [];
        lines.push('<td class="preview-tile-container' + (wide ? ' preview-tile-container-wide' : '') + ' ' + entity.resourceSubType + '" style="background-image: url(' + thumbnailUrl + ');" background="' + thumbnailUrl + '" valign="bottom">');

        // Private users should not be linked
        if (entity.resourceType === 'user' && entity.visibility === 'private') {
            lines.push('<span>');
        } else {
            lines.push('<a href="' + profileLink(entity.profilePath, baseUrl) + '" title="' + util.html.encodeForHTMLAttribute(entity.displayName) + '" target="_blank">');
        }

        lines.push('        <table cellpadding="0" cellspacing="0" class="preview-tile-container-inner">');
        lines.push('            <tr>');
        lines.push('                <td valign="bottom">');
        lines.push('                    <div class="preview-tile-metadata">');
        lines.push('                        <table cellpadding="0" cellspacing="0" class="preview-tile-metadata-inner">');
        lines.push('                            <tr valign="top">');
        lines.push('                                <td colspan="2"><h3>');

        // We add the link in here again as some mail clients will remove the outer link. We do not link
        // the entity if it's a private user
        if (entity.resourceType === 'user' && entity.visibility === 'private') {
            lines.push('                                <span class="preview-tile-title wrapped">' + title + '</span>');
        } else {
            lines.push('                                <a href="' + profileLink(entity.profilePath, baseUrl) + '" title="' + util.html.encodeForHTMLAttribute(entity.displayName) + '" target="_blank" class="preview-tile-title wrapped">' + title + '</a>');
        }

        lines.push('                                </h3></td>');
        lines.push('                            </tr>');
        lines.push('                            <tr>');
        lines.push('                                <td class="preview-tile-metadata-description"><small>' + resourceType + '</small></td>');
        if (entity.resourceType !== 'user') {
            lines.push('                            <td class="preview-tile-metadata-visibility"><img src="' + util.url.ensureAbsoluteLink(icon, baseUrl) + '" alt="' + util.html.encodeForHTMLAttribute(i18nVisibility) + '"/></td>');
        }
        lines.push('                            </tr>');
        lines.push('                        </table>');
        lines.push('                    </div>');
        lines.push('                </td>');
        lines.push('            </tr>');
        lines.push('        </table>');
        if (entity.resourceType === 'user' && entity.visibility === 'private') {
            lines.push('</span>');
        } else {
            lines.push('</a>');
        }
        lines.push('</td>');

        // Join the lines together by new line, adding the trailing new line to the end
        print(lines.join('\n') + '\n');
    };
%>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http: //www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http: //www.w3.org/1999/xhtml">
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="viewport" content="width=device-width" />
        <style>

            /*
             * Include the general styles. Note that we need to include them through
             * Underscore as otherwise the skinVariable settings would be inaccessible
             */
            <% include node_modules/oae-email/emailTemplates/email.css.jst %>

            #greeting h1 {
                font-size: 24px;
                font-weight: bold;
                margin: 0 0 5px;
                text-align: center;
                word-wrap: break-word;
            }

            /***********
             ** TILES **
             ***********/

            .preview-tile-container {
                background-position: center;
                background-repeat: no-repeat;
                background-size: cover;
                border: 1px solid #EEEDEB;
                height: 162px;
                padding: 0px;
                width: 162px;
            }

            .preview-tile-container.collabdoc {
                background-position: top left;
            }

            .preview-tile-container-wide {
                width: 520px;
            }

            .preview-tile-container-inner {
                height: 162px;
            }

            .preview-tile-container-wide .preview-tile-container-inner {
                height: 223px;
            }

            .preview-tile-container .preview-tile-metadata {
                background: #000000;
                background-color: <%= skinVariables['tile-background-color'] %> !important;
                padding: 7px;
                width: 148px;
            }

            .preview-tile-container-wide .preview-tile-metadata {
                width: 520px;
            }

            .preview-tile-metadata .preview-tile-metadata-inner {
                width: 100%;
            }

            .preview-tile-container .preview-tile-metadata .preview-tile-metadata-visibility,
            .preview-tile-container .preview-tile-metadata .preview-tile-metadata-visibility > img {
                height: 18px;
                width: 18px;
            }

            .preview-tile-container .preview-tile-metadata h3 {
                display: block;
                font-size: 14px;
                font-weight: 600;
                line-height: 18px;
                margin: 0;
                max-width: 135px;
                width: 130px;
            }

            .preview-tile-container-wide .preview-tile-metadata h3 {
                width: 493px;
                max-width: 493px;
            }

            .preview-tile-container .preview-tile-metadata h3 .preview-tile-title {
                color: <%= skinVariables['tile-title-color'] %>;
            }

            .preview-tile-container .preview-tile-metadata .preview-tile-metadata-description {
                padding-top: 2px;
            }

            .preview-tile-container .preview-tile-metadata .preview-tile-metadata-description > small {
                color: <%= skinVariables['tile-description-color'] %>;
                text-transform: uppercase;
                font-size: 13px;
            }


            /****************
             ** THUMBNAILS **
             ****************/

            .thumbnail-user img {
                height: 40px;
                width: 40px;
            }


            /****************
             ** ACTIVITIES **
             ****************/

            .activity-row > td {
                background-color: #FFF;
                border: 1px solid #EDEDEC;
                font-size: 14px;
                margin: 10px auto;
                padding: 30px;
            }

            .activity-row > table {
                clear: both;
            }

            .activity-row .activity-thumbnail-container {
                float: left;
            }

            .activity-row .activity-summary-container {
                padding-left: 52px;
                max-width: 620px;
            }

            .activity-row .activity-summary-container .activity-date {
                margin-top: 5px;
            }

            .activity-row .activity-previews-container {
                margin: 25px 0 0 -10px;
            }

            .activity-row .activity-comment-container {
                margin-top: 25px;
                min-height: 40px;
            }

            .activity-row .activity-comment-container.comment-level-1 {
                margin-left: 40px;
            }

            .activity-row .activity-comment-container.comment-level-2 {
                margin-left: 80px;
            }

            .activity-row .activity-comment-container .activity-comment-thumbnail-container {
                float: left;
            }

            .activity-row .activity-comment-container .activity-comment {
                padding-left: 52px;
                max-width: 650px;
            }

            .activity-row .activity-comment-container.comment-level-1 .activity-comment {
                max-width: 610px;
            }
            .activity-row .activity-comment-container.comment-level-2 .activity-comment {
                max-width: 570px;
            }

            .activity-row .activity-comment-container .activity-comment .activity-comment-message {
                margin-top: 7px;
            }

            /* Markdown formatting */

            .activity-row .activity-comment-container .activity-comment .activity-comment-message h1 {
                font-size: 1.1em;
                font-weight: bold;
                margin: 1em 0 0.5em;
            }

            .activity-row .activity-comment-container .activity-comment .activity-comment-message h2 {
                font-size: 1.05em;
                font-weight: bold;
                margin: 0.75em 0 0.5em;
            }

            .activity-row .activity-comment-container .activity-comment .activity-comment-message h3 {
                font-size: 1em;
                font-weight: bold;
                margin: 0.75em 0 0.5em;
            }

            .activity-row .activity-comment-container .activity-comment .activity-comment-message h4 {
                font-size: 1em;
                font-style: italic;
                margin: 0.75em 0 0.5em;
            }

            .activity-row .activity-comment-container .activity-comment .activity-comment-message h5,
            .activity-row .activity-comment-container .activity-comment .activity-comment-message h6 {
                font-size: 1em;
                font-style: normal;
                font-weight: normal;
                margin: 0.75em 0 0.5em;
            }

            .activity-row .activity-comment-container .activity-comment .activity-comment-message > *:first-child {
                margin-top: 0;
            }

            .activity-row .activity-comment-container .activity-comment .activity-comment-message blockquote {
                border-left: 5px solid #eeeeee;
                margin: 20px 0;
                padding: 10px 20px;
            }

            .activity-row .activity-comment-container .activity-comment .activity-comment-message code {
                background-color: #F5F5F5;
                display: inline-block;
                white-space: pre-wrap;
            }

            .activity-row .activity-comment-container .activity-comment .activity-comment-message img {
                max-width: 100%;
            }

            .activity-row .activity-comment-container .activity-comment .activity-comment-message pre {
                background-color: #F5F5F5;
                border: 1px solid #CCC;
                border-radius: 4px;
                color: #333333;
                display: block;
                line-height: 1.5;
                margin: 0 0 10px;
                padding: 10px;
                word-break: break-all;
                word-wrap: break-word;
            }

            .activity-row .activity-comment-container .activity-comment .activity-comment-message ol,
            .activity-row .activity-comment-container .activity-comment .activity-comment-message ul,
            .activity-row .activity-comment-container .activity-comment .activity-comment-message p {
                margin: 10px 0 0 0;
            }

            .activity-row .activity-comment-container .activity-comment .activity-comment-message ol:first-child,
            .activity-row .activity-comment-container .activity-comment .activity-comment-message ul:first-child,
            .activity-row .activity-comment-container .activity-comment .activity-comment-message p:first-child {
                margin-top: 0;
            }

            /*****************
             ** INVITATIONS **
             *****************/

             .invitations-summary {
                color: #888;
                text-align: center;
             }

             .invitations-summary > div {
                margin-bottom: 10px;
             }
        </style>
    </head>
    <body>
        <table cellspacing="10" cellpadding="0">
            <tbody>
                <% renderHeader(); %>

                <% if (shared.isEmail(recipient.id)) { %>
                    <tr class="row">
                        <td class="invitations-summary">
                            <div>
                                <%= util.html.toText(shared.getEmailSummary(util, recipient, activities, baseUrl)) %>
                            </div>
                        </td>
                    </tr>
                    <tr class="row">
                        <td class="btn-prominent">
                            <a href="<%= invitationUrl %>">
                                __MSG__ACCEPT_THIS_INVITATION__
                            </a>
                        </td>
                    </tr>
                <% } else if (recipient.displayName) { %>
                    <% var greeting = util.i18n.translate('__MSG__ACTIVITY_EMAIL_GREETING__', {'displayName': util.html.encodeForHTML(recipient.displayName)}); %>
                    <tr id="greeting">
                        <td>
                            <h1><%= util.url.ensureAbsoluteLinks(greeting, baseUrl) %></h1>
                        </td>
                    </tr>
                <% } %>

                <%
                _.each(activities, function(activity) {
                    var summary = util.i18n.translate(activity.summary.i18nKey, activity.summary.i18nArguments) ;
                    summary = util.url.ensureAbsoluteLinks(summary, baseUrl);
                %>
                    <tr class="row activity-row" data-activity-id="<%= activity.originalActivity['oae:activityId'] %>">
                        <td>
                            <table cellpadding="0" cellspacing="0">
                                <tbody>
                                    <tr>
                                        <td>
                                            <div class="activity-thumbnail-container">
                                                <% renderUserThumbnail(activity.primaryActor); %>
                                            </div>
                                            <div class="activity-summary-container">
                                                <div class="wrapped"><%= summary %></div>
                                                <div class="activity-date muted"><%= util.i18n.formatDate(new Date(activity.published), 'f', timezone) %></div>
                                            </div>
                                            <table class="activity-previews-container" cellspacing="10" cellpadding="0">
                                                <tbody>
                                                    <%
                                                        // We only need to display the first 6 thumbnails
                                                        activity.activityItems = activity.activityItems.slice(0, 6);

                                                        // Display 3 thumbnails per row
                                                        _.each(activity.activityItems, function(thumbnail, index) {
                                                            // Start a new row every fourth thumbnail (or for the initial one)
                                                            if (index % 3 === 0) {
                                                                print('<tr>');
                                                            }

                                                            renderPreviewTile(thumbnail, activity.activityItems.length === 1);

                                                            // Close the row after 3 thumbnails or when we've iterated over all the thumbnails
                                                            if (index % 3 === 2 || index === (activity.activityItems.length - 1)) {
                                                                print('</tr>');
                                                            }
                                                        });
                                                    %>
                                                </tbody>
                                            </table>
                                            <% _.each(activity.allComments, function(item) {
                                                %>
                                                <div class="activity-comment-container comment-level-<%= item.level %>">
                                                    <div class="activity-comment-thumbnail-container">
                                                        <% renderUserThumbnail(item.comment.author); %>
                                                    </div>
                                                    <div class="activity-comment">
                                                        <%
                                                            var authorLink = profileLink(item.comment.author['oae:profilePath'], baseUrl);
                                                            if (authorLink) {
                                                                print('<a href="' + authorLink + '" title="' + util.html.encodeForHTMLAttribute(item.comment.author.displayName) + '" class="wrapped">');
                                                            }
                                                        %>
                                                            <%= util.html.encodeForHTML(item.comment.author.displayName) %>
                                                        <%
                                                            if (authorLink) {
                                                                print('</a>');
                                                            }
                                                        %>
                                                        <span class="activity-date muted"><%= util.i18n.formatDate(new Date(item.comment.published), 'f', timezone) %></span>
                                                        <div class="activity-comment-message wrapped"><%= util.url.ensureAbsoluteLinks(util.markdown.toHtml(item.comment.content), baseUrl) %></div>
                                                    </div>
                                                </div>
                                            <% }); %>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </td>
                    </tr>
                <% }); %>

                <% renderFooter(!shared.isEmail(recipient.id)); %>
            </tbody>
        </table>
    </body>
</html>
