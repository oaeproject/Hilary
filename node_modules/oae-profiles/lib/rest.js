/*!
 * Copyright 2012 Sakai Foundation (SF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://www.osedu.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var _ = require('underscore');

var PrincipalAPI = require('oae-principals');

var ProfileAPI = require('./api');

module.exports = function(tenant) {

    // Get all sections.
    tenant.server.get('/api/user/:id/profile', function(req, res) {
        req.telemetryUrl = '/api/user/id/profile';
        ProfileAPI.getAllSections(req.ctx, req.params.id, function(err, sections) {
            if (err) {
                return res.send(err.code, err.msg);
            }

            var sectionMap = {};
            _.each(sections, function(profileSection) { sectionMap[profileSection.name] = profileSection.data; });
            return res.send(200, sectionMap);
        });
    });

    // Get a specific profile section.
    tenant.server.get('/api/user/:id/profile/:section', function(req, res) {
        req.telemetryUrl = '/api/user/id/profile/section';
        ProfileAPI.getSection(req.ctx, req.params.id, req.params.section, function(err, profileSection) {
            if (err) {
                return res.send(err.code, err.msg);
            }

            return res.send(200, profileSection.data);
        });
    });

    // Get all the permissions.
    tenant.server.get('/api/user/:id/visibility', function(req, res) {
        req.telemetryUrl = '/api/user/id/visibility';
        PrincipalAPI.getUser(req.ctx, req.params.id, function(err, user) {
            if (err) {
                return res.send(err.code, err.msg);
            }

            ProfileAPI.getAllSections(req.ctx, req.params.id, function(err, sections) {
                if (err) {
                    return res.send(err.code, err.msg);
                }

                var visibilities = {};
                visibilities.accountVisibility = user.visibility;
                visibilities.profile = {};
                _.each(sections, function(profileSection) { visibilities.profile[profileSection.name] = profileSection.visibility; });
                return res.send(200, visibilities);
            });
        });
    });

    // Create or update a section.
    tenant.server.post('/api/user/:id/profile', function(req, res) {
        req.telemetryUrl = '/api/user/id/profile';
        var section = req.body.section;
        var data = req.body.data;
        var visibility = req.body.visibility;
        // Try parsing the data.
        try {
            data = JSON.parse(data);
        } catch (err) {
            return res.send(400, "The data needs to be a proper JSON object.");
        }

        ProfileAPI.setSection(req.ctx, req.params.id, section, visibility, data, true, function(err) {
            if (err) {
                return res.send(err.code, err.msg);
            }

            res.send(200, '');
        });
    });

    // Update the visibility of a section.
    tenant.server.post('/api/user/:id/profile/:section/visibility', function(req, res) {
        req.telemetryUrl = '/api/user/id/profile/sectionvisibility';
        ProfileAPI.setSection(req.ctx, req.params.id, req.params.section, req.body.visibility, {}, false, function(err) {
            if (err) {
                return res.send(err.code, err.msg);
            }

            res.send(200, '');
        });
    });
};
