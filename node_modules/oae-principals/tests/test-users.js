var Tenant = require('oae-tenants/lib/model').Tenant;
var api = require('oae-principals');


var tenant = new Tenant('cam', 'Cambridge', 'Cambridge University', 3000);

var createUser = function(test, callback) {
    var r = Math.floor(Math.random()*10000000);

    var username = 'simong-' + r;
    var firstName = 'Simon';
    var lastName = 'Gaeremynck';
    var displayName = 'simong';
    var password = 'password';
    var privacy = "public";

    api.createUser(tenant, username, password, 'public', firstName, lastName, displayName, function(err, id) {
        if (err) {
            test.fail("Creating a new user should be possible.");
            return test.done();
        }

        api.getUser(id, function(err, user) {
            test.equal(username, user.username);
            test.equal(firstName, user.firstName);
            test.equal(lastName, user.lastName);
            test.equal(displayName, user.displayName);
            test.equal(privacy, user.privacy);

            // Try to create one again.
            api.createUser(tenant, username, password, 'public', firstName, lastName, displayName, function(err, foo) {
                if (!err) {
                    test.fail("Creating a user with the same username should fail.");
                }

                // This way the exports.testCreateUser can be used in other tests.
                callback(user);
            });
        });
    });
};

exports.testCreateUser = function(test) {
    createUser(test, function() {
        test.done();
    });
};

exports.testUpdateUser = function(test) {
    test.expect(9);

    createUser(test, function(user) {
        // Try to update it.
        api.updateUser(user.id, 'private', 'first', 'last', 'displayname', function(err){
            if (err) {
                test.fail("Should be able to update a user.");
                test.done();
            }

            // Get it.
            api.getUser(user.id, function(err, user) {
                if (err) {
                    test.fail("Should be able to get a user.");
                    test.done();
                }

                test.equal('private', user.privacy);
                test.equal('first', user.firstName);
                test.equal('last', user.lastName);
                test.equal('displayname', user.displayName);
                test.done();
            });

        });
    });
};

exports.testEmptyUpdate = function(test) {
    createUser(test, function(user) {
        api.updateUser(user.id, undefined, undefined, undefined, undefined, function(err){
            if (!err) {
                test.fail('Updating a user with no values should fail.');
            }
            test.done();
        });
    });
};