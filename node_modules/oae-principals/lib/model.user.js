/*!
 * Copyright 2012 Sakai Foundation (SF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 * 
 *     http://www.osedu.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

/**
 * The User model
 *
 * @param  {String} tenant      The tenant this user belongs to.
 * @param  {String} id          The globally unique userId for this user. ie: u:cam:johndoe
 * @param  {String} username    The username that this user can use to login. ie: johndoe
 * @param  {String} visibility  The visibility of this user account. ie: loggedin
 * @param  {String} locale      The user's locale
 * @param  {String} timezone    The user's timezone
 * @param  {String} firstName   This user's first name.
 * @param  {String} lastName    This user's last name.
 * @param  {String} displayName An optional display name. If the account is hidden, the displayname can still be used.
 */
module.exports.User = function(tenant, id, username, visibility, locale, timezone, firstName, lastName, displayName, isGlobalAdmin, isTenantAdmin) {
    // Explicit checks on true for admin.
    var _isGlobalAdmin = (isGlobalAdmin === true);
    var _isTenantAdmin = (isTenantAdmin === true);

    var that = {};

    that.tenant = tenant;
    that.id = id;
    that.username = username;
    that.visibility = visibility;
    that.locale = locale;
    that.timezone = timezone;
    that.firstName = firstName;
    that.lastName = lastName;
    that.displayName = displayName || (that.firstName + " " + that.lastName);

    /**
     * Hides the sensitive data (first and last name) from this user.
     */
    that.hide = function() {
        delete that.firstName;
        delete that.lastName;
        delete that.timezone;
        delete that.locale;
    };

    /**
     * Check if a user is a global admin
     *
     * @return {Boolean} Whether or not this user is a global admin.
     */
    that.isGlobalAdmin = function() {
        return _isGlobalAdmin;
    };

    /**
     * Whether or not this user is a tenant admin for the provided tenant.
     *
     * @param  {String}  tenantAlias    The tenant this user is supposed to be an admin of.
     * @return {Boolean}                Whether or not the user is a tenant admin.
     */
    that.isTenantAdmin = function(tenantAlias) {
        return (_isTenantAdmin && tenantAlias === that.tenant);
    };

    /**
     * Checks for both tenant admin as global admin.
     *
     * @param  {Object}  tenantAlias    The tenant this user could a tenant admin of.
     * @return {Boolean}                Whether this user is a tenant or global admin.
     */
    that.isAdmin = function(tenant) {
        return (that.isTenantAdmin(tenant) || that.isGlobalAdmin());
    };

    return that;
};
