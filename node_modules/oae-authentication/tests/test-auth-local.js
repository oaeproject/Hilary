/*
 * Copyright 2012 Sakai Foundation (SF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 * 
 *     http://www.osedu.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */
var request = require('request');
var principalApi = require('oae-principals');
var tenantApi = require('oae-tenants');
var Context = require('oae-context').Context;


module.exports.testLocalAuth = function(test) {
    test.expect(19);
    var r = Math.floor(Math.random()*10000000);
    var username = 'user-' + r;

    tenantApi.getTenantByPort(2001, function(err, tenant) {
        var ctx = new Context(tenant, null);
        test.ok(!err);

        principalApi.createUser(ctx, username, 'password', 'public', 'en_GB', 'Europe/London', 'John', 'Doe', 'John Doe', function(err, userId) {
            test.ok(!err);

            // Log in.
            request.post({
                'uri': 'http://localhost:2001/api/auth/login',
                'method': 'POST',
                'form': {'username': username, 'password': 'password'}
            }, function(err, response, body) {
                test.ok(!err);
                test.equal(200, response.statusCode, "Expected to be succesfully logged in.");
                var data = JSON.parse(body);
                test.equal(username, data.username);
                test.equal('John', data.firstName);
                test.equal('Doe', data.lastName);
                test.equal('John Doe', data.displayName);

                // the request module has a built-in cookie jar.
                request.get('http://localhost:2001/api/me', function(err, response, body) {
                    test.ok(!err);
                    test.equal(200, response.statusCode);
                    var data = JSON.parse(body);
                    test.equal(userId, data.userId);
                    test.equal('John', data.profile.firstName);
                    test.equal('Doe', data.profile.lastName);
                    test.equal('John Doe', data.profile.displayName);

                    // logout.
                    request.post({
                        'uri': 'http://localhost:2001/api/auth/logout',
                        'followRedirect': false
                    }, function(err, response, body) {
                        test.ok(!err);
                        test.equal(200, response.statusCode, "Expected to be succesfully logged out.");

                        request.get('http://localhost:2001/api/me', function(err, response, body) {
                            test.ok(!err);
                            test.equal(200, response.statusCode);
                            var j = JSON.parse(body);
                            test.equal(true, j.anon);
                            test.done();
                        });
                    });
                });
            });

        });
    });
};

module.exports.testFailAuth = function(test) {
    test.expect(3);
    var r = Math.floor(Math.random()*10000000);
    var username = 'user-' + r;

    tenantApi.getTenantByPort(2001, function(err, tenant) {
        test.ok(!err);

        // Login with some non-existing user.
        request.post({
                'uri': 'http://localhost:2001/api/auth/login',
                'method': 'POST',
                'form': {'username': 'non-existing-user', 'password': 'password'}
            }, function(err, response, body) {
                test.ok(!err);
                test.equal(401, response.statusCode, "Expected to be unauthorized");
                test.done();
            }
        );
    });
};