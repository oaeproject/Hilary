/*
 * Copyright 2013 Apereo Foundation (AF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var assert = require('assert');

var Context = require('oae-context').Context;
var TestsUtil = require('oae-tests');

var DiscussionsAPI = require('oae-discussions');

describe('Discussions Authz', function() {

    var anonymousContext = null;

    beforeEach(function() {
        anonymousContext = new Context(global.oaeTests.tenants.cam);
    });

    describe('#canManageDiscussion', function() {

        /**
         * Test that verifies anonymous users cannot manage a discussion
         */
        it('verifies anonymous cannot manage a discussion', function(callback) {
            // The actual discussion doesn't matter, as it should know immediately that anonymous cannot manage
            DiscussionsAPI.Authz.canManageDiscussion(anonymousContext, {}, function(err, canManage) {
                assert.ok(!err);
                assert.ok(!canManage);
                return callback();
            });
        });
    });

    describe('#canShareDiscussion', function() {

        /**
         * Test that verifies anonymous users cannot share a discussion
         */
        it('verifies anonymous cannot share a discussion', function(callback) {
            // The actual discussion doesn't matter, as it should know immediately that anonymous cannot share
            DiscussionsAPI.Authz.canShareDiscussion(anonymousContext, {}, [], function(err, canShare) {
                assert.ok(!err);
                assert.ok(!canShare);
                return callback();
            });
        });
    });

    describe('#canPostDiscussionMessage', function(callback) {

        /**
         * Test that verifies anonymous users cannot post a discussion message
         */
        it('verifies anonymous cannot post a discussion message', function(callback) {
            // The actual discussion doesn't matter, as it should know immediately that anonymous cannot post
            DiscussionsAPI.Authz.canPostDiscussionMessage(anonymousContext, {}, function(err, canPost) {
                assert.ok(!err);
                assert.ok(!canPost);
                return callback();
            });
        });
    });

    describe('#canDeleteDiscussionMessage', function(callback) {

        /**
         * Test that verifies anonymous users cannot delete a discussion message
         */
        it('verifies anonymous cannot delete a discussion message', function(callback) {
            // The actual discussion and message doesn't matter, as it should know immediately that anonymous cannot delete
            DiscussionsAPI.Authz.canDeleteDiscussionMessage(anonymousContext, {}, {}, function(err, canDelete) {
                assert.ok(!err);
                assert.ok(!canDelete);
                return callback();
            });
        });
    });
});