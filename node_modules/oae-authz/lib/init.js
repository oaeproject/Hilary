/*!
 * Copyright 2013 Apereo Foundation (AF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var Cassandra = require('oae-util/lib/cassandra');

module.exports = function(config, callback) {
    ensureSchema(callback);
};

/**
 * Three column families will be created:
 *
 * - The column family AuthzRoles will keep principal ids (user and groups) as its row
 * keys and will have a column for each of the resources (groups, content, etc.) the user
 * has a role on.
 * - The column family AuthzMembers will keep resource ids (groups, content, etc.) as its
 * row keys and will have a column for each of the principals (users and groups) the
 * resource is associated to.
 * - The column family AuthzMembershipsCache will keep a cache of all of the direct and indirect
 * memberships for a principal, used to do permission checks. This will be invalidated every time
 * one of these groups is updated.
 *
 * @param  {Function}         callback       A function(err), specifying whether or not there was an error creating the schema.
 * @param  {Object}           callback.err   Error object, containing the error message
 * @api private
 */
var ensureSchema = function(callback) {
    Cassandra.createColumnFamilies({
        'AuthzRoles': 'CREATE COLUMNFAMILY AuthzRoles (principalId text PRIMARY KEY);',
        'AuthzMembers': 'CREATE COLUMNFAMILY AuthzMembers (resourceId text PRIMARY KEY);',
        'AuthzMembershipsCache': 'CREATE COLUMNFAMILY AuthzMembershipsCache (principalId text PRIMARY KEY);'
    }, callback);
};
