/*!
 * Copyright 2014 Apereo Foundation (AF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var _ = require('underscore');
var OAE = require('oae-util/lib/oae');

var TenantsAPI = require('oae-tenants/lib/api');
var TenantNetworksAPI = require('oae-tenants/lib/api.networks');

//////////////////////////////////
// GLOBAL ADMIN TENANT NETWORKS //
//////////////////////////////////

/*!
 * Get all the tenant networks in the system
 */
OAE.globalAdminRouter.on('get', '/api/tenantNetworks', function(req, res) {
    TenantNetworksAPI.getTenantNetworks(req.ctx, function(err, tenantNetworks) {
        if (err) {
            return res.send(err.code, err.msg);
        }

        return res.send(200, tenantNetworks);
    });
});

/*!
 * Create a tenant network
 */
OAE.globalAdminRouter.on('post', '/api/tenantNetwork/create', function(req, res) {
    TenantNetworksAPI.createTenantNetwork(req.ctx, req.body.displayName, function(err, tenantNetwork) {
        if (err) {
            return res.send(err.code, err.msg);
        }

        return res.send(201, tenantNetwork);
    });
});

/*!
 * Update a tenant network
 */
OAE.globalAdminRouter.on('post', '/api/tenantNetwork/:id', function(req, res) {
    TenantNetworksAPI.updateTenantNetwork(req.ctx, req.params.id, req.body.displayName, function(err, tenantNetwork) {
        if (err) {
            return res.send(err.code, err.msg);
        }

        return res.send(200, tenantNetwork);
    });
});

/*!
 * Delete a tenant network
 */
OAE.globalAdminRouter.on('delete', '/api/tenantNetwork/:id', function(req, res) {
    TenantNetworksAPI.deleteTenantNetwork(req.ctx, req.params.id, function(err) {
        if (err) {
            return res.send(err.code, err.msg);
        }

        return res.send(200);
    });
});

/*!
 * Add tenants to a tenant network
 */
OAE.globalAdminRouter.on('post', '/api/tenantNetwork/:id/addTenants', function(req, res) {
    var tenantAliases = _.isString(req.body.alias) ? [req.body.alias] : req.body.alias;
    TenantNetworksAPI.addTenantAliases(req.ctx, req.params.id, tenantAliases, function(err) {
        if (err) {
            return res.send(err.code, err.msg);
        }

        return res.send(200);
    });
});

/*!
 * Remove tenants from a tenant network
 */
OAE.globalAdminRouter.on('post', '/api/tenantNetwork/:id/removeTenants', function(req, res) {
    var tenantAliases = _.isString(req.body.alias) ? [req.body.alias] : req.body.alias;
    TenantNetworksAPI.removeTenantAliases(req.ctx, req.params.id, tenantAliases, function(err) {
        if (err) {
            return res.send(err.code, err.msg);
        }

        return res.send(200);
    });
});


//////////////////////////
// GLOBAL ADMIN TENANTS //
//////////////////////////

/*!
 * Get a list of all available tenants
 */
OAE.globalAdminRouter.on('get', '/api/tenants', function(req, res, next) {
    var tenants = TenantsAPI.getTenants();
    res.send(200, tenants);
});

/*!
 * Get the metadata of the current tenant
 */
OAE.globalAdminRouter.on('get', '/api/tenant', function(req, res) {
    res.send(200, req.ctx.tenant());
});

/*!
 * Get a tenant's metadata
 */
OAE.globalAdminRouter.on('get', '/api/tenant/:alias', function(req, res) {
    var tenant = TenantsAPI.getTenant(req.params.alias);
    if (!tenant) {
        return res.send(404, 'There is no tenant with alias ' + req.params.alias);
    }
    res.send(200, tenant);
});

/*!
 * Create a new tenant
 */
OAE.globalAdminRouter.on('post', '/api/tenant/create', function(req, res) {
    TenantsAPI.createTenant(req.ctx, req.body.alias, req.body.displayName, req.body.host, function(err, tenant) {
        if (err) {
            return res.send(err.code, err.msg);
        }
        res.send(200, tenant);
    });
});

/*!
 * Start an existing tenant
 */
OAE.globalAdminRouter.on('post', '/api/tenant/start', function(req, res) {
    // Sets the tenant to be ENABLED by passing in 'false'
    TenantsAPI.disableTenants(req.ctx, req.body.aliases, false, function(err) {
        if (err) {
            return res.send(err.code, err.msg);
        }
        res.send(200);
    });
});

/*!
 * Stop an existing tenant
 */
OAE.globalAdminRouter.on('post', '/api/tenant/stop', function(req, res) {
    // Sets the tenant to be disabled by passing in 'true'
    TenantsAPI.disableTenants(req.ctx, req.body.aliases, true, function(err) {
        if (err) {
            return res.send(err.code, err.msg);
        }
        res.send(200);
    });
});

/*!
 * Delete an existing tenant
 */
OAE.globalAdminRouter.on('post', '/api/tenant/delete', function(req, res) {
    TenantsAPI.deleteTenants(req.ctx, req.body.aliases, function(err) {
        if (err) {
            return res.send(err.code, err.msg);
        }
        res.send(200);
    });
});

/*!
 * Update a tenant's metadata
 */
OAE.globalAdminRouter.on('post', '/api/tenant/:alias', function(req, res) {
    TenantsAPI.updateTenant(req.ctx, req.params.alias, req.body, function(err) {
        if (err) {
            return res.send(err.code, err.msg);
        }
        res.send(200);
    });
});


/////////////
// Tenants //
/////////////

/*!
 * Get the metadata of the current tenant
 */
OAE.tenantRouter.on('get', '/api/tenant', function(req, res) {
    var tenant = TenantsAPI.getTenant(req.ctx.tenant().alias);
    if (!tenant) {
        return res.send(404, 'There is no tenant with alias ' + req.ctx.tenant().alias);
    }
    res.send(200, tenant);
});

/*!
 * Update the current tenant's metadata
 */
OAE.tenantRouter.on('post', '/api/tenant', function(req, res) {
    TenantsAPI.updateTenant(req.ctx, req.ctx.tenant().alias, req.body, function(err) {
        if (err) {
            return res.send(err.code, err.msg);
        }
        res.send(200);
    });
});
