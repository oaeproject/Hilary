/*!
 * Copyright 2014 Apereo Foundation (AF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var OAE = require('oae-util/lib/oae');
var OaeUtil = require('oae-util/lib/util');

var AnnotationsAPI = require('./api');

/**
 * @REST getContentContentIdAnnotationsRevisionId
 *
 * Get the annotations for a revision of a piece of content
 *
 * @Server      tenant
 * @Method      GET
 * @Path        /content/{contentId}/annotations/{revisionId}
 * @PathParam   {string}            contentId           The id of the content item for which to get the annotations
 * @PathParam   {string}            revisionId          The id of the revision for which to get the annotations
 * @QueryParam  {string}            pageNumber          The page for which to retrieve the annotations
 * @Return      {Annotation[]}                          The activity stream for the specified resource
 * @HttpResponse                    200                 Annotations returned
 * @HttpResponse                    400                 Must specify a valid content id
 * @HttpResponse                    400                 Must specify a valid revision id
 * @HttpResponse                    401                 You do not have access to this content item
 * @HttpResponse                    404                 Unknown content item or revision
 */
OAE.tenantRouter.on('get', '/api/content/:contentId/annotations/:revisionId', function(req, res) {
    AnnotationsAPI.getAnnotations(req.ctx, req.params.contentId, req.params.revisionId, req.query.pageNumber, function(err, annotations) {
        if (err) {
            return res.send(err.code, err.msg);
        }

        return res.send(200, annotations);
    });
});

/**
 * @REST postContentContentIdAnnotationsRevisionId
 *
 * Create a new annotation on a piece of content
 *
 * @Server      tenant
 * @Method      POST
 * @Path        /content/{contentId}/annotations/{revisionId}
 * @PathParam   {string}            contentId           The id of the content item for which to create an annotation
 * @PathParam   {string}            revisionId          The id of the revision for which to create an annotation
 * @FormParam   {string}            pageNumber          The page on which the annotation should be created
 * @FormParam   {string}            text                The text of the annotation
 * @FormParam   {string}            quote               The selected text on which the annotation was made
 * @BodyParam   {Range[]}           ranges              The selected ranges in the document. Usually one
 * @Return      {Annotation}                            The created annotation
 * @HttpResponse                    201                 The annotation was created
 * @HttpResponse                    400                 One or more parameters were invalid
 * @HttpResponse                    401                 You are not allowed to annotate this piece of content
 * @HttpResponse                    404                 Unknown content item or revision
 */
OAE.tenantRouter.on('post', '/api/content/:contentId/annotations/:revisionId', function(req, res) {
    AnnotationsAPI.createAnnotation(req.ctx, req.params.contentId, req.params.revisionId, req.body.pageNumber, req.body.text, req.body.quote, req.body.ranges, function(err, annotation) {
        if (err) {
            return res.send(err.code, err.msg);
        }

        return res.send(201, annotation);
    });
});

/**
 * @REST putContentContentIdAnnotationsRevisionIdAnnotationId
 *
 * Update an annotation on a piece of content
 *
 * @Server      tenant
 * @Method      PUT
 * @Path        /content/{contentId}/annotations/{revisionId}/{annotationId}
 * @PathParam   {string}            contentId           The id of the content item for which to update an annotation
 * @PathParam   {string}            revisionId          The id of the revision for which to update an annotation
 * @PathParam   {string}            annotationId        The id of the annotation to update
 * @FormParam   {string}            text                The new text of the annotation
 * @Return      {Annotation}                            The updated annotation
 * @HttpResponse                    200                 The annotation was updated
 * @HttpResponse                    400                 One or more parameters were invalid
 * @HttpResponse                    401                 You are not allowed to update annotations on this piece of content
 * @HttpResponse                    404                 Unknown content item or revision
 */
OAE.tenantRouter.on('put', '/api/content/:contentId/annotations/:revisionId/:annotationId', function(req, res) {
    AnnotationsAPI.updateAnnotation(req.ctx, req.params.contentId, req.params.revisionId, req.params.annotationId, req.body.text, function(err, annotation) {
        if (err) {
            return res.send(err.code, err.msg);
        }

        return res.send(200, annotation);
    });
});

/**
 * @REST deleteContentContentIdAnnotationsRevisionIdAnnotationId
 *
 * Delete an annotation from a piece of content
 *
 * @Server      tenant
 * @Method      DELETE
 * @Path        /content/{contentId}/annotations/{revisionId}/{annotationId}
 * @PathParam   {string}            contentId           The id of the content item from which to delete an annotation
 * @PathParam   {string}            revisionId          The id of the revision from which to delete an annotation
 * @PathParam   {string}            annotationId        The id of the annotation to delete
 * @Return      {void}
 * @HttpResponse                    204                 The annotation was deleted
 * @HttpResponse                    400                 One or more parameters were invalid
 * @HttpResponse                    401                 You are not allowed to delete annotations from this piece of content
 * @HttpResponse                    404                 Unknown content item or revision
 */
OAE.tenantRouter.on('delete', '/api/content/:contentId/annotations/:revisionId/:annotationId', function(req, res) {
    AnnotationsAPI.deleteAnnotation(req.ctx, req.params.contentId, req.params.revisionId, req.params.annotationId, function(err) {
        if (err) {
            return res.send(err.code, err.msg);
        }

        // Annotatorjs expects a 204 rather than a 200
        return res.send(204);
    });
});
