/*!
 * Copyright 2012 Sakai Foundation (SF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://www.osedu.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var log = require('oae-logger').logger('oae-preview-processor');

var LinkProcessorUtil = require('oae-preview-processor/lib/processors/link/util');
var webshot = require('oae-preview-processor/lib/internal/webshot');

/**
 * @borrows Interface.test as DefaultLinkProcessor.test
 */
var test = module.exports.test = function(ctx, contentObj, callback) {
    // Don't bother with non-link content items.
    if (contentObj.resourceSubType !== 'link') {
        return callback(null, -1);
    }

    // Only allow HTTP(S) URLs and default to the lowest possible score.
    if (/^http(s)?:\/\//.test(contentObj.link)) {
        return callback(null, 1);
    } else {
        return callback(null, -1);
    }
};

/**
 * @borrows Interface.test as DefaultLinkProcessor.test
 */
var generatePreviews = module.exports.generatePreviews = function(ctx, contentObj, callback) {
    var path = ctx.baseDir + '/webshot.png';
    webshot.getImage(contentObj.link, path, null, function (err) {
        if (err) {
            log().error({'err': err, 'contentId': ctx.contentId}, 'Could not generate an image.');
            return callback(err);
        }

        LinkProcessorUtil.generatePreviewsFromImage(ctx, path, null, callback);
    });
};
