/*
 * Copyright 2012 Sakai Foundation (SF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 * 
 *     http://www.osedu.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var Cassandra = require('oae-util/lib/cassandra');

var api = require('./api');

/**
 * Ensure that the tenant schema is created. If the tenant schema has not been created, or the default tenant has not been seeded,
 * both will be performed automatically. If both the schema and the default tenant exist, then this method will do nothing.
 * 
 * @param {Function} callback A function(err), specifying whether or not there was an error creating the schema.
 */
module.exports.ensureSchema = function(callback) {
    callback = callback || function() {};
    // Bootstrap the Tenant CF, if necessary
    Cassandra.createColumnFamily('Tenant', 'CREATE COLUMNFAMILY Tenant (port text PRIMARY KEY, alias text, name text, description text, baseUrl text)', callback);
};

/**
 * Drop the tenant schema and all of its data.
 *
 * @param {Function} callback A function(err), specifying whether or not there was an error dropping the schema
 */
module.exports.dropSchema = function(callback) {
    callback = callback || function() {};
    Cassandra.dropColumnFamily('Tenant', callback);
};
