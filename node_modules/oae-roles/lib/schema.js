/*
 * Copyright 2012 Sakai Foundation (SF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 * 
 *     http://www.osedu.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var Cassandra = require('oae-util/lib/cassandra');
var rolesAPI = require('oae-roles');
var systemUser = require('oae-principals/lib/model').SystemUser;
var model = require('./model');

/**
 * Ensures that the Role schema is active. If it has already been created, this will have no effect.
 *
 * @param {Function(err)} callback A function that specifies whether or not the operation was successful
 * @param {Object} callback.err An error that occured, if any
 */
module.exports.ensureSchema = function(callback) {
    callback = callback || function() {throw err;};
    Cassandra.createColumnFamily('Role', 'create columnfamily Role (principal text primary key)', callback);
};

/**
 * Drop the roles schema, and all its associated data.
 * 
 * @param {Function(err)} callback A function that specifies whether or not the operation was successful
 * @param {Object} callback.err An error that occured, if any
 */
module.exports.dropSchema = function(callback) {
    callback = callback || function() {throw err};
    Cassandra.dropColumnFamily('Role', callback);
}