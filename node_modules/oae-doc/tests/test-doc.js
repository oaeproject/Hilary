/*
 * Copyright 2012 Sakai Foundation (SF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://www.osedu.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * visibilitys and limitations under the License.
 */

var _ = require('underscore');
var assert = require('assert');

var RestAPI = require('oae-rest');
var TestsUtil = require('oae-tests');


describe('Docs', function() {

    // Rest context that can be used for anonymous requests on the cambridge tenant
    var anonymousCamRestContext = null;

    /**
     * Function that will fill up the global admin, tenant admin and anymous rest context
     */
    before(function(callback) {
        // Fill up the anonymous cam rest context
        anonymousCamRestContext = TestsUtil.createTenantRestContext(global.oaeTests.tenants.cam.host);
        callback();
    });


    describe('Get modules', function() {
        
        /**
         * Test that verifies that it is possible to get a list of all of the available modules
         */
        it('verify get modules', function(callback) {
            RestAPI.Doc.getModules(anonymousCamRestContext, function(err, modules) {
                assert.ok(!err);
                assert.ok(modules);
                assert.notEqual(modules.indexOf('oae-doc'), -1);
                callback();
            });
        });
        
    });

    
    describe('Get module documentation', function() {
        
        /**
         * Test that verifies that the JSDocs for an existing module can be retrieved
         */
        it('verify get module documentation', function(callback) {
            RestAPI.Doc.getDoc(anonymousCamRestContext, 'oae-doc', function(err, docs) {
                assert.ok(!err);
                assert.ok(_.keys(docs).length);
                assert.ok(_.keys(docs['api.js']).length);
                callback();
            });
        });
    
        /**
         * Test that verifies that validation on the module id is done appropriately
         */
        it('verify validation', function(callback) {
            // Get non-existing OAE module
            RestAPI.Doc.getDoc(anonymousCamRestContext, 'oae-non-existing', function(err, docs) {
                assert.ok(err);
                assert.ok(!docs);
            
                // Get non-OAE module
                RestAPI.Doc.getDoc(anonymousCamRestContext, 'helenus', function(err, docs) {
                    assert.ok(err);
                    assert.ok(!docs);
                    callback();
                });
            });
        });
        
    });
    
});
